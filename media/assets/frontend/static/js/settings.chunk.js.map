{"version":3,"sources":["pages/dtable/model/workspace.js","components/user-settings/side-nav.js","components/user-settings/user-avatar-form.js","components/user-settings/user-basic-info-form.js","components/dialog/update-webdav-password.js","components/user-settings/webdav-password.js","components/user-settings/language-setting.js","components/user-settings/list-in-address-book.js","components/user-settings/two-factor-auth.js","components/dialog/confirm-disconnect-wechat.js","components/user-settings/social-login.js","components/dialog/confirm-delete-account.js","components/user-settings/delete-account.js","components/user-settings/bind-phone.js","components/user-settings/email-notice.js","settings.js","components/common/notice-item.js","components/common/notification.js","pages/dtable/search/search-result-item.js","pages/dtable/search/search-dtable.js"],"names":["Workspace","obj","this","id","group_id","owner_name","owner_type","table_list","group_owner","group_admins","group_shared_tables","SideNav","props","className","data","map","item","index","show","key","curItemID","href","substr","text","React","Component","window","app","pageOptions","avatarURL","csrfToken","UserAvatarForm","fileInputChange","fileInput","current","files","length","file","fileName","name","lastIndexOf","toaster","danger","gettext","duration","fileExt","toLowerCase","allowedExt","indexOf","errorMsg","replace","join","size","dtableWebAPI","updateUserAvatar","then","res","setState","avatarSrc","avatar_url","success","catch","error","Utils","getErrorMsg","openFileInput","click","handleMouseOver","isEditShown","handleMouseOut","createRef","form","state","type","value","onMouseOver","onMouseOut","src","width","height","alt","onChange","ref","onClick","nameLabel","enableUpdateUserInfo","enableUserSetContactEmail","UserBasicInfoForm","handleNameInputChange","e","target","handleContactEmailInputChange","contactEmail","handleSubmit","preventDefault","contact_email","updateUserInfo","userInfo","login_id","loginID","action","method","onSubmit","htmlFor","disabled","readOnly","UpdateWebdavPassword","submit","btnDisabled","updatePassword","password","handleInputChange","passwd","trim","togglePasswordVisible","isPasswordVisible","generatePassword","randomPassword","possible","i","charAt","Math","floor","random","toggle","centered","isOpen","addonType","color","webdavPasswd","WebdavPassword","updateWebdavSecret","toggleDialog","isDialogOpen","Fragment","max","currentLang","langList","LanguageSetting","onSelectChange","selectedItem","location","siteRoot","options","langCode","label","langName","defaultValue","ListInAddressBook","checked","inputChecked","list_in_address_book","toString","defaultDevice","backupTokens","TwoFactorAuthentication","renderEnabled","renderDisabled","ConfirmDisconnectWechat","disconnect","formActionURL","enableWorkWeixin","enableWeixin","workWixinConnected","wixinConnected","socialNextPage","SocialLogin","confirmDisconnect","disconnectType","isConfirmDialogOpen","disconnectUrl","encodeURIComponent","bind","ConfirmDeleteAccount","DeleteAccount","confirmDelete","BIND_STATE","BOUND_PHONE","UNBOUND_PHONE","BINDING_PHONE","BindPhone","onChangePhoneNumber","event","newPhoneNumber","onChangeVerifyCode","inputVerifyCode","validPhone","match","validCode","verifyCode","setSendCodeTimer","timer","setInterval","intervalCount","count","verifyCodeMessage","clearInterval","phoneNumberMessage","isSendCodeError","isSendCodeAvailable","onSendCode","sendVerifyCode","bindState","isVerifyCodeRequired","message","response","status","bindPhoneNumber","updatePhoneNumber","oldPhoneNumber","oldBindPhone","timter","canEdit","row","initialEmailNotificationInterval","EmailNotice","inputChange","currentInterval","parseInt","formSubmit","updateEmailNotificationInterval","intervalOptions","interval","canUpdatePassword","passwordOperationText","userUnusablePassword","enableAddressBook","enableWebdavSecret","twoFactorAuthEnabled","enableDeleteAccount","enableBindPhone","Settings","errMessage","onSearchedClick","url","workspace_id","handleContentScroll","scrollTop","scrolled","sideNavItems","filter","document","getElementById","offsetTop","isPro","getUserInfo","searchPlaceholder","mediaUrl","logoPath","logoHeight","logoWidth","title","siteTitle","placeholder","onScroll","bind_phone","ReactDOM","render","moment","locale","lang","NoticeItem","onNoticeItemClick","noticeItem","seen","noticeType","detail","share_from","share_from_user_avatar_url","shareFrom","share_from_user_name","dtableName","dtable","dtableLink","notice","submit_user","form_name","submit_user_avatar_url","submit_user_name","group_staff_avatar_url","groupStaff","group_staff_name","userHref","group_staff_email","groupName","group_name","userLink","generatorNoticeInfo","dangerouslySetInnerHTML","__html","time","fromNow","Notification","showNotice","updateNotifications","unseenCount","loadNotices","listNotifications","noticeList","notification_list","markNoticeAsRead","getUnseenNotificationCount","unseen_count","aria-label","SearchResultItem","onClickHandler","onItemClickHandler","SearchDtable","onFocusHandler","isMaskShow","isCloseShow","onCloseHandler","resetToDefault","onChangeHandler","_this","newValue","inputValue","getValueLength","isResultShow","isResultGetted","queryData","q","clearTimeout","setTimeout","getSearchResult","onSearchToggle","isSearchInputShow","resultItems","sendRequest","listWorkspaces","workspaceList","workspace_list","dtableNameList","forEach","resultData","push","str","code","len","charCodeAt","style","query","onFocus","autoComplete","renderSearchResult","right"],"mappings":"2HAeeA,IAbb,WAAYC,GAAM,oBAChBC,KAAKC,GAAKF,EAAIE,IAAM,GACpBD,KAAKE,SAAWH,EAAIG,UAAY,GAChCF,KAAKG,WAAaJ,EAAII,YAAc,GACpCH,KAAKI,WAAaL,EAAIK,YAAc,GACpCJ,KAAKK,WAAaN,EAAIM,YAAc,GACpCL,KAAKM,YAAcP,EAAIO,aAAe,GACtCN,KAAKO,aAAeR,EAAIQ,cAAgB,GACxCP,KAAKQ,oBAAsB,K,iJCkBhBC,E,YAlBb,WAAYC,GAAQ,qEACZA,I,sEAGE,IAAD,OACP,OACE,wBAAIC,UAAU,oCACXX,KAAKU,MAAME,KAAKC,KAAI,SAACC,EAAMC,GAC1B,OAAOD,EAAKE,KACV,wBAAIC,IAAKF,EAAOJ,UAAS,mBAAc,EAAKD,MAAMQ,YAAcJ,EAAKK,KAAKC,OAAO,IAAM,WAAY,uBAAGT,UAAU,WAAWQ,KAAML,EAAKK,MAAOL,EAAKO,OAAiB,a,GAXzJC,IAAMC,W,ECFKC,OAAOC,IAAIC,YAApCC,E,EAAAA,UAAWC,E,EAAAA,UA2FJC,E,YAvFb,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KASRoB,gBAAkB,WAGhB,GAAK,EAAKC,UAAUC,QAAQC,MAAMC,OAAlC,CAIA,IAAMC,EAAO,EAAKJ,UAAUC,QAAQC,MAAM,GACpCG,EAAWD,EAAKE,KAGtB,IAAmC,IAA/BD,EAASE,YAAY,KAIvB,OAHAC,IAAQC,OAAOC,YAAQ,gCAAiC,CACtDC,SAAU,KAEL,EAGT,IAAMC,EAAUP,EAAShB,OAAQgB,EAASE,YAAY,KAAO,GAAIM,cAC3DC,EAAa,CAAC,MAAM,OAAQ,MAAO,OACzC,IAAqC,IAAjCA,EAAWC,QAAQH,GAAiB,CACtC,IAAMI,EAAWN,YAAQ,8CACtBO,QAAQ,gBAAiBH,EAAWI,KAAK,OAE5C,OADAV,IAAQC,OAAOO,EAAU,CAACL,SAAU,KAC7B,EAIT,GAAIP,EAAKe,KAAO,QAAW,CACzB,IAAMH,EAAWN,YAAQ,uDAEzB,OADAF,IAAQC,OAAOO,EAAU,CAACL,SAAU,KAC7B,EAITS,IAAaC,iBAAiBjB,EAAM,KAAKkB,MAAK,SAACC,GAC7C,EAAKC,SAAS,CACZC,UAAWF,EAAI1C,KAAK6C,aAEtBlB,IAAQmB,QAAQjB,YAAQ,eACvBkB,OAAM,SAACC,GACR,IAAIb,EAAWc,IAAMC,YAAYF,GACjCrB,IAAQC,OAAOO,QApDA,EAwDnBgB,cAAgB,WACd,EAAKhC,UAAUC,QAAQgC,SAzDN,EA4DnBC,gBAAkB,WAChB,EAAKV,SAAS,CACZW,aAAa,KA9DE,EAkEnBC,eAAiB,WACf,EAAKZ,SAAS,CACZW,aAAa,KAlEf,EAAKnC,UAAYT,IAAM8C,YACvB,EAAKC,KAAO/C,IAAM8C,YAClB,EAAKE,MAAQ,CACXd,UAAW7B,EACXuC,aAAa,GANE,E,sEAyEjB,OACE,yBAAKvD,UAAU,kBACb,2BAAO4D,KAAK,SAASlC,KAAK,sBAAsBmC,MAAO5C,IACvD,2BAAOjB,UAAU,2BAA2B8B,YAAQ,YACpD,yBAAK9B,UAAU,6BAA6B8D,YAAazE,KAAKiE,gBAAiBS,WAAY1E,KAAKmE,gBAC9F,yBAAKQ,IAAK3E,KAAKsE,MAAMd,UAAWoB,MAAM,KAAKC,OAAO,KAAKC,IAAI,GAAGnE,UAAU,gBACxE,2BAAO4D,KAAK,OAAOlC,KAAK,SAAS1B,UAAU,SAASoE,SAAU/E,KAAK8B,gBAAiBkD,IAAKhF,KAAK+B,YAC9F,0BAAMpB,UAAS,sDAAiDX,KAAKsE,MAAMJ,aAAe,UAAYe,QAASjF,KAAK+D,sB,GAlFjGzC,IAAMC,W,ECK/BC,OAAOC,IAAIC,YAHbwD,E,EAAAA,UACAC,E,EAAAA,qBACAC,E,EAAAA,0BAuFaC,E,YAlFb,WAAY3E,GAAQ,IAAD,uBACjB,4CAAMA,KAaR4E,sBAAwB,SAACC,GACvB,EAAKhC,SAAS,CACZlB,KAAMkD,EAAEC,OAAOhB,SAhBA,EAoBnBiB,8BAAgC,SAACF,GAC/B,EAAKhC,SAAS,CACZmC,aAAcH,EAAEC,OAAOhB,SAtBR,EA0BnBmB,aAAe,SAACJ,GACdA,EAAEK,iBACF,IAAIhF,EAAO,CACTyB,KAAM,EAAKiC,MAAMjC,MAEf+C,IACFxE,EAAKiF,cAAgB,EAAKvB,MAAMoB,cAElC,EAAKhF,MAAMoF,eAAelF,IAlCT,MAMb,EAAKF,MAAMqF,SAHbF,EAHe,EAGfA,cACAG,EAJe,EAIfA,SACA3D,EALe,EAKfA,KALe,OAOjB,EAAKiC,MAAQ,CACXoB,aAAcG,EACdI,QAASD,EACT3D,KAAMA,GAVS,E,sEAqCT,IAAD,EAKHrC,KAAKsE,MAHPoB,EAFK,EAELA,aACAO,EAHK,EAGLA,QACA5D,EAJK,EAILA,KAGF,OACE,0BAAM6D,OAAO,GAAGC,OAAO,OAAOC,SAAUpG,KAAK2F,cAE3C,yBAAKhF,UAAU,kBACb,2BAAOA,UAAU,0BAA0B0F,QAAQ,QAAQnB,GAC3D,yBAAKvE,UAAU,YACb,2BAAOA,UAAU,eAAeV,GAAG,OAAOsE,KAAK,OAAOlC,KAAK,WAAWmC,MAAOnC,EAAMiE,UAAWnB,EAAsBJ,SAAU/E,KAAKsF,0BAItIW,GACC,yBAAKtF,UAAU,kBACb,2BAAOA,UAAU,0BAA0B0F,QAAQ,aAAa5D,YAAQ,cACxE,yBAAK9B,UAAU,YACb,2BAAOA,UAAU,eAAeV,GAAG,YAAYsE,KAAK,OAAOlC,KAAK,WAAWmC,MAAOyB,EAASK,UAAU,EAAMC,UAAU,KAEvH,uBAAG5F,UAAU,0BAA0B8B,YAAQ,uCAIjDiD,GAAgBN,IAChB,yBAAKzE,UAAU,kBACb,2BAAOA,UAAU,0BAA0B0F,QAAQ,iBAAiB5D,YAAQ,mBAC5E,yBAAK9B,UAAU,YACb,2BAAOA,UAAU,eAAeV,GAAG,gBAAgBsE,KAAK,OAAOlC,KAAK,gBAAgBmC,MAAOkB,EAAcY,UAAWlB,EAA2BmB,UAAWnB,EAA2BL,SAAU/E,KAAKyF,iCAEtM,uBAAG9E,UAAU,0BAA0B8B,YAAQ,oDAInD,4BAAQ8B,KAAK,SAAS5D,UAAU,sCAAsC2F,UAAWnB,GAAuB1C,YAAQ,gB,GA5ExFnB,IAAMC,W,eC8DvBiF,E,YAhEb,WAAY9F,GAAQ,IAAD,8BACjB,4CAAMA,KAQR+F,OAAS,WACP,EAAKlD,SAAS,CACZmD,aAAa,IAEf,EAAKhG,MAAMiG,eAAe,EAAKrC,MAAMsC,WAbpB,EAgBnBC,kBAAoB,SAACtB,GACnB,IAAIuB,EAASvB,EAAEC,OAAOhB,MAAMuC,OAC5B,EAAKxD,SAAS,CAACqD,SAAUE,KAlBR,EAqBnBE,sBAAwB,WACtB,EAAKzD,SAAS,CACZ0D,mBAAoB,EAAK3C,MAAM2C,qBAvBhB,EA2BnBC,iBAAmB,WAGjB,IAFA,IAAIC,EAAiB,GACfC,EAAW,iEACRC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,GAAkBC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASlF,SAExE,EAAKqB,SAAS,CACZqD,SAAUO,EACVF,mBAAmB,KAjCrB,EAAK3C,MAAQ,CACXsC,SAAU,EAAKlG,MAAMkG,SACrBK,mBAAmB,EACnBP,aAAa,GALE,E,sEAuCT,IACAgB,EAAW1H,KAAKU,MAAhBgH,OACR,OACE,kBAAC,IAAD,CAAOC,UAAU,EAAMC,QAAQ,EAAMF,OAAQA,GAC3C,kBAAC,IAAD,CAAaA,OAAQA,GAASjF,YAAQ,oBACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY9B,UAAU,IACpB,kBAAC,IAAD,CAAO4D,KAAMvE,KAAKsE,MAAM2C,kBAAoB,OAAS,WAAYzC,MAAOxE,KAAKsE,MAAMsC,SAAU7B,SAAU/E,KAAK6G,oBAC5G,kBAAC,IAAD,CAAiBgB,UAAU,UACzB,kBAAC,IAAD,CAAQ5C,QAASjF,KAAKgH,uBAAuB,uBAAGrG,UAAS,sBAAiBX,KAAKsE,MAAM2C,kBAAoB,kBAAmB,4BAC5H,kBAAC,IAAD,CAAQhC,QAASjF,KAAKkH,kBAAkB,uBAAGvG,UAAU,kDAI3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQmH,MAAM,YAAY7C,QAASyC,GAASjF,YAAQ,WACpD,kBAAC,IAAD,CAAQqF,MAAM,UAAU7C,QAASjF,KAAKyG,OAAQH,SAAUtG,KAAKsE,MAAMoC,aAAcjE,YAAQ,iB,GAzDhElB,aCH3BwG,EAAiBvG,OAAOC,IAAIC,YAA5BqG,aAwEOC,E,YApEb,WAAYtH,GAAQ,IAAD,8BACjB,4CAAMA,KAQRsG,sBAAwB,WACtB,EAAKzD,SAAS,CACZ0D,mBAAoB,EAAK3C,MAAM2C,qBAXhB,EAenBN,eAAiB,SAACC,GAChBzD,IAAa8E,mBAAmBrB,GAAUvD,MAAK,SAACC,GAC9C,EAAK4E,eACL,EAAK3E,SAAS,CACZqD,SAAUA,IAEZrE,IAAQmB,QAAQjB,YAAQ,eACvBkB,OAAM,SAACC,GACR,IAAIb,EAAWc,IAAMC,YAAYF,GACjC,EAAKsE,eACL3F,IAAQC,OAAOO,OAzBA,EA6BnBmF,aAAe,WACb,EAAK3E,SAAS,CACZ4E,cAAe,EAAK7D,MAAM6D,gBA7B5B,EAAK7D,MAAQ,CACXsC,SAAUmB,EACVd,mBAAmB,EACnBkB,cAAc,GALC,E,sEAmCT,IAAD,EACiCnI,KAAKsE,MAArCsC,EADD,EACCA,SAAUK,EADX,EACWA,kBAClB,OACE,kBAAC,IAAMmB,SAAP,KACE,yBAAKnI,GAAG,uBAAuBU,UAAU,gBACvC,wBAAIA,UAAU,wBAAwB8B,YAAQ,oBAC7CmE,EACC,kBAAC,IAAMwB,SAAP,KACE,yBAAKzH,UAAU,6BACb,2BAAOA,UAAU,YAAY8B,YAAQ,cACrC,2BAAO9B,UAAU,gBAAgB4D,KAAK,OAAOC,MAAOyC,EAAoBL,EAAW,aAAcL,UAAU,EAAMrD,KAAMqE,KAAKc,IAAIzB,EAAS1E,OAAQ,MACjJ,0BAAM+C,QAASjF,KAAKgH,sBAAuBrG,UAAS,+BAA0BX,KAAKsE,MAAM2C,kBAAoB,kBAAmB,4BAElI,4BAAQtG,UAAU,+BAA+BsE,QAASjF,KAAKkI,cAAezF,YAAQ,YAGxF,4BAAQ9B,UAAU,0BAA0BsE,QAASjF,KAAKkI,cAAezF,YAAQ,kBAGpFzC,KAAKsE,MAAM6D,cACV,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEvB,SAAU5G,KAAKsE,MAAMsC,SACrBD,eAAgB3G,KAAK2G,eACrBe,OAAQ1H,KAAKkI,qB,GA7DE5G,IAAMC,W,UCJ/BC,OAAOC,IAAIC,YADb4G,E,EAAAA,YAAaC,E,EAAAA,SAoCAC,E,YA/Bb,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KAGR+H,eAAiB,SAACC,GAEhBC,SAASxH,KAAT,UAAmByH,IAAnB,sBAAyCF,EAAalE,QANrC,E,sEAUjB,IAAMqE,EAAUN,EAAS1H,KAAI,SAACC,EAAMC,GAClC,MAAO,CACLyD,MAAO1D,EAAKgI,SACZC,MAAOjI,EAAKkI,aAIhB,OACE,yBAAKrI,UAAU,eAAeV,GAAG,gBAC/B,wBAAIU,UAAU,wBAAwB8B,YAAQ,qBAC9C,kBAAC,IAAD,CACE9B,UAAU,oBACVsI,aAAc,CAACzE,MAAO8D,EAAYQ,SAAUC,MAAOT,EAAYU,UAC/DH,QAASA,EACT9D,SAAU/E,KAAKyI,sB,GA1BKnH,IAAMC,WCsCrB2H,E,YAnCb,WAAYxI,GAAQ,IAAD,uBACjB,4CAAMA,KAORmG,kBAAoB,SAACtB,GACnB,IAAM4D,EAAU5D,EAAEC,OAAO2D,QACzB,EAAK5F,SAAS,CACZ6F,aAAcD,IAEhB,EAAKzI,MAAMoF,eAAe,CACxBuD,qBAAsBF,EAAQG,cAdf,IAETD,EAAyB,EAAK3I,MAAMqF,SAApCsD,qBAFS,OAGjB,EAAK/E,MAAQ,CACX8E,aAAcC,GAJC,E,sEAkBT,IACAD,EAAiBpJ,KAAKsE,MAAtB8E,aAER,OACE,yBAAKzI,UAAU,eAAeV,GAAG,wBAC/B,wBAAIU,UAAU,wBAAwB8B,YAAQ,wBAC9C,yBAAK9B,UAAU,6BACb,2BAAO4D,KAAK,WAAWtE,GAAG,uBAAuBoC,KAAK,uBAAuB1B,UAAU,OAAOwI,QAASC,EAAcrE,SAAU/E,KAAK6G,oBACpI,2BAAOR,QAAQ,uBAAuB1F,UAAU,OAAO8B,YAAQ,qG,GA5BzCnB,IAAMC,W,ECHlCC,OAAOC,IAAIC,YAFb6H,E,EAAAA,cACAC,E,EAAAA,aA8CaC,E,YAzCb,WAAY/I,GAAQ,IAAD,8BACjB,4CAAMA,KAGRgJ,cAAgB,WACd,OACE,kBAAC,IAAMtB,SAAP,KACE,uBAAGzH,UAAU,QAAQ8B,YAAQ,oBAC7B,uBAAG9B,UAAU,+BAA+BQ,KAAI,UAAKyH,IAAL,+CAC7CnG,YAAQ,sCACX,uBAAG9B,UAAU,QACV8B,YAAQ,0FACS,IAAjB+G,EAAqB/G,YAAQ,4CAC5BA,YAAQ,0CAA0CO,QAAQ,QAASwG,IAEvE,uBAAGrI,KAAI,UAAKyH,IAAL,oDACLjI,UAAU,2BAA2B8B,YAAQ,iBAhBlC,EAqBnBkH,eAAiB,WACf,OACE,kBAAC,IAAMvB,SAAP,KACE,uBAAGzH,UAAU,QAAQ8B,YAAQ,+HAC7B,uBAAGtB,KAAI,UAAKyH,IAAL,4CAAyDjI,UAAU,2BACvE8B,YAAQ,uCA1BE,E,sEAgCjB,OACE,yBAAK9B,UAAU,eAAeV,GAAG,mBAC/B,wBAAIU,UAAU,wBAAwB8B,YAAQ,8BAC7C8G,EAAgBvJ,KAAK0J,gBAAkB1J,KAAK2J,sB,GArCfrI,IAAMC,WCoC7BqI,E,YA/Bb,WAAYlJ,GAAQ,IAAD,8BACjB,4CAAMA,KAIRmJ,WAAa,WACX,EAAKxF,KAAKrC,QAAQyE,UAJlB,EAAKpC,KAAO/C,IAAM8C,YAFD,E,sEAST,IAAD,EACoCpE,KAAKU,MAAzCoJ,EADA,EACAA,cAAelI,EADf,EACeA,UAAW8F,EAD1B,EAC0BA,OACjC,OACE,kBAAC,IAAD,CAAOC,UAAU,EAAMC,QAAQ,EAAMF,OAAQA,GAC3C,kBAAC,IAAD,CAAaA,OAAQA,GAASjF,YAAQ,eACtC,kBAAC,IAAD,KACE,2BAAIA,YAAQ,yCACZ,0BAAMuC,IAAKhF,KAAKqE,KAAM1D,UAAU,SAASwF,OAAO,OAAOD,OAAQ4D,GAC7D,2BAAOvF,KAAK,SAASlC,KAAK,sBAAsBmC,MAAO5C,MAG3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQkG,MAAM,YAAY7C,QAASyC,GAASjF,YAAQ,WACpD,kBAAC,IAAD,CAAQqF,MAAM,UAAU7C,QAASjF,KAAK6J,YAAapH,YAAQ,qB,GAxB/BlB,a,ECElCC,OAAOC,IAAIC,YAPbE,E,EAAAA,UACAkH,E,EAAAA,SACAiB,E,EAAAA,iBACAC,E,EAAAA,aACAC,E,EAAAA,mBACAC,E,EAAAA,eACAC,E,EAAAA,eAkEaC,E,YA7Db,WAAY1J,GAAQ,IAAD,8BACjB,4CAAMA,KAOR2J,kBAAoB,SAACC,GACnB,EAAK/G,SAAS,CACZgH,qBAAqB,EACrBD,eAAgBA,KAXD,EAenBpC,aAAe,WACb,EAAK3E,SAAS,CACZgH,qBAAsB,EAAKjG,MAAMiG,uBAfnC,EAAKjG,MAAQ,CACXiG,qBAAqB,EACrBD,eAAgB,IAJD,E,sEAsBjB,IAAME,EAA8C,eAA9BxK,KAAKsE,MAAMgG,eAAX,UACjB1B,IADiB,8CAC6B6B,mBAAmBN,IADhD,UAEjBvB,IAFiB,yCAEwB6B,mBAAmBN,IAEjE,OACE,kBAAC,WAAD,KACE,yBAAKxJ,UAAU,eAAeV,GAAG,eAC/B,wBAAIU,UAAU,wBAAwB8B,YAAQ,iBAC7CsH,GACC,yBAAKpJ,UAAU,QACb,uBAAGA,UAAU,QAAqB,UAAbmI,EAAuB,2BAAS,eACpDmB,EACC,4BAAQtJ,UAAU,0BAA0BsE,QAASjF,KAAKqK,kBAAkBK,KAAK1K,KAAM,eAAgByC,YAAQ,eAC/G,uBAAGtB,KAAI,UAAKyH,IAAL,2CAAgD6B,mBAAmBN,IAAmBxJ,UAAU,2BAA2B8B,YAAQ,aAG/IuH,GACC,yBAAKrJ,UAAU,QACb,uBAAGA,UAAU,QAAqB,UAAbmI,EAAuB,eAAO,UAClDoB,EACC,4BAAQvJ,UAAU,0BAA0BsE,QAASjF,KAAKqK,kBAAkBK,KAAK1K,KAAM,WAAYyC,YAAQ,eAC3G,uBAAGtB,KAAI,UAAKyH,IAAL,sCAA2C6B,mBAAmBN,IAAmBxJ,UAAU,2BAA2B8B,YAAQ,cAI5IzC,KAAKsE,MAAMiG,qBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,CACET,cAAeU,EACf5I,UAAWA,EACX8F,OAAQ1H,KAAKkI,qB,GAtDD5G,IAAMC,WC6BjBoJ,E,YA/Bb,WAAYjK,GAAQ,IAAD,8BACjB,4CAAMA,KAIRwF,OAAS,WACP,EAAK7B,KAAKrC,QAAQyE,UAJlB,EAAKpC,KAAO/C,IAAM8C,YAFD,E,sEAST,IAAD,EACoCpE,KAAKU,MAAzCoJ,EADA,EACAA,cAAelI,EADf,EACeA,UAAW8F,EAD1B,EAC0BA,OACjC,OACE,kBAAC,IAAD,CAAOC,UAAU,EAAMC,QAAQ,EAAMF,OAAQA,GAC3C,kBAAC,IAAD,CAAaA,OAAQA,GAASjF,YAAQ,mBACtC,kBAAC,IAAD,KACE,2BAAIA,YAAQ,wCACZ,0BAAMuC,IAAKhF,KAAKqE,KAAM1D,UAAU,SAASwF,OAAO,OAAOD,OAAQ4D,GAC7D,2BAAOvF,KAAK,SAASlC,KAAK,sBAAsBmC,MAAO5C,MAG3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQkG,MAAM,YAAY7C,QAASyC,GAASjF,YAAQ,WACpD,kBAAC,IAAD,CAAQqF,MAAM,UAAU7C,QAASjF,KAAKkG,QAASzD,YAAQ,iB,GAxB9BlB,aCLjCK,EACEJ,OAAOC,IAAIC,YADbE,UA+CagJ,E,YA1Cb,WAAYlK,GAAQ,IAAD,8BACjB,4CAAMA,KAMRmK,cAAgB,SAACtF,GACfA,EAAEK,iBACF,EAAKrC,SAAS,CACZgH,qBAAqB,KAVN,EAcnBrC,aAAe,WACb,EAAK3E,SAAS,CACZgH,qBAAsB,EAAKjG,MAAMiG,uBAdnC,EAAKjG,MAAQ,CACXiG,qBAAqB,GAHN,E,sEAqBjB,OACE,kBAAC,IAAMnC,SAAP,KACE,yBAAKzH,UAAU,eAAeV,GAAG,eAC/B,wBAAIU,UAAU,wBAAwB8B,YAAQ,mBAC9C,uBAAG9B,UAAU,QAAQ8B,YAAQ,6DAC7B,4BAAQ9B,UAAU,0BAA0BsE,QAASjF,KAAK6K,eAAgBpI,YAAQ,YAEnFzC,KAAKsE,MAAMiG,qBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,CACET,cAAa,UAAKlB,IAAL,mBACbhH,UAAWA,EACX8F,OAAQ1H,KAAKkI,qB,GAnCC5G,IAAMC,WCH5BuJ,GAAa,CACjBC,YAAa,cACbC,cAAe,gBACfC,cAAe,iBA0OFC,G,YAjOb,WAAYxK,GAAQ,IAAD,8BACjB,4CAAMA,KAkCRyK,oBAAsB,SAACC,GACrB,IAAI5G,EAAQ4G,EAAM5F,OAAOhB,MAAMuC,OAC/B,EAAKxD,SAAS,CAAC8H,eAAgB7G,KArCd,EAwCnB8G,mBAAqB,SAACF,GACpB,IAAI5G,EAAQ4G,EAAM5F,OAAOhB,MAAMuC,OAC/B,EAAKxD,SAAS,CAACgI,gBAAiB/G,KA1Cf,EA6CnBgH,WAAa,WAEX,OAAgD,OAAzC,EAAKlH,MAAM+G,eAAeI,MADvB,sBA9CO,EAkDnBC,UAAY,WACV,MAAiC,KAA1B,EAAKpH,MAAMqH,YAnDD,EAsDnBC,iBAAmB,WACjB,EAAKC,MAAQC,aAAY,WAAO,IACxBC,EAAkB,EAAKzH,MAAvByH,cACN,GAAIA,EAAe,CACjB,IAAIC,EAAQD,EAAgB,EACxBE,EAAoBxJ,YAAQ,yBAAyBO,QAAQ,UAAWgJ,GAC5E,EAAKzI,SAAS,CACZwI,cAAeC,EACfC,kBAAmBA,QAEhB,CACLC,cAAc,EAAKL,OACnB,IAAII,EAAoBxJ,YAAQ,oBAChC,EAAKc,SAAS,CACZ4I,mBAAoB,GACpBC,iBAAiB,EACjBH,kBAAmBA,EACnBI,qBAAqB,EACrBN,cAAe,QAGlB,MA3Ec,EA8EnBO,WAAa,WACX,GAAG,EAAKd,aAAc,CAEpBrI,IAAaoJ,eAAe,EAAKjI,MAAM+G,eADpB,cACgDhI,MAAK,SAACC,GACvE,IAAI6I,EAAqB1J,YAAQ,8BACjC,EAAKc,SAAS,CACZiJ,UAAW1B,GAAWG,cACtBkB,mBAAoBA,EACpBC,iBAAiB,EACjBK,sBAAsB,EACtBJ,qBAAqB,IAEvB,EAAKT,sBACJjI,OAAM,SAACC,GACR,IAAI8I,EAAU,GAEZA,EAD2B,MAA1B9I,EAAM+I,SAASC,OACNnK,YAAQ,4BACgB,MAA1BmB,EAAM+I,SAASC,OACbnK,YAAQ,2CACgB,MAA1BmB,EAAM+I,SAASC,OACZnK,YAAQ,0BAETA,YAAQ,6BAEpB,EAAKc,SAAS,CACZ4I,mBAAoBO,EACpBN,iBAAiB,WAGhB,CACL,IAAIM,EAAUjK,YAAQ,4BACtB,EAAKc,SAAS,CACZ4I,mBAAoBO,EACpBN,iBAAiB,MA/GJ,EAoHnBS,gBAAkB,WAChB,GAAG,EAAKrB,cAAgB,EAAKE,YAAa,CAAC,IAAD,EACE,EAAKpH,MAAzC+G,EADkC,EAClCA,eAAgBE,EADkB,EAClBA,gBACtBpI,IAAa0J,gBAAgBxB,EAAgBE,GAAiBlI,MAAK,SAACC,GAClE,IAAIoJ,EAAUjK,YAAQ,6CACnB,EAAKoJ,OACNK,cAAc,EAAKL,OAGrB,EAAKtI,SAAS,CACZiJ,UAAW1B,GAAWC,YACtBoB,mBAAoBO,EACpBN,iBAAiB,EACjBb,gBAAiB,GACjBU,kBAAmB,GACnBQ,sBAAsB,EACtBJ,qBAAqB,EACrBN,cAAe,QAEhBpI,OAAM,SAACC,GACR,IAAI8I,EAAU,GAEZA,EAD2B,MAA1B9I,EAAM+I,SAASC,OACNnK,YAAQ,4BACgB,MAA1BmB,EAAM+I,SAASC,OACbnK,YAAQ,sBACgB,MAA1BmB,EAAM+I,SAASC,OACbnK,YAAQ,0BAERA,YAAQ,6BAEpB,EAAKc,SAAS,CACZ4I,mBAAoBO,EACpBN,iBAAiB,WAGhB,CACL,IAAIM,EAAUjK,YAAQ,oCACtB,EAAKc,SAAS,CACZ4I,mBAAoBO,EACpBN,iBAAiB,MA3JJ,EAgKnBU,kBAAoB,WAClB,IAAIb,EAAoBxJ,YAAQ,oBAChC,EAAKc,SAAS,CACZiJ,UAAW1B,GAAWE,cACtBqB,qBAAqB,EACrBJ,kBAAmBA,KAlKrB,EAAK3H,MAAQ,CACXkI,UAAW1B,GAAWE,cACtB+B,eAAgBrM,EAAMsM,aACtB3B,eAAgB3K,EAAMsM,aACtBb,mBAAoB,GACpBC,iBAAiB,EACjBb,gBAAiB,GACjBU,kBAAmB,GACnBQ,sBAAsB,EACtBJ,qBAAqB,EACrBN,cAAe,IAGjB,EAAKkB,OAAS,KAhBG,E,iFAqBjB,GADuBjN,KAAKU,MAAtBsM,aAEJhN,KAAKuD,SAAS,CACZiJ,UAAW1B,GAAWC,kBAEnB,CACL,IAAIkB,EAAoBxJ,YAAQ,oBAChCzC,KAAKuD,SAAS,CACZiJ,UAAW1B,GAAWE,cACtBiB,kBAAmBA,EACnBI,qBAAqB,O,+BA2IjB,IAAD,EAEgIrM,KAAKsE,MAAtIkI,EAFC,EAEDA,UAAWnB,EAFV,EAEUA,eAAgBc,EAF1B,EAE0BA,mBAAoBM,EAF9C,EAE8CA,qBAAsBJ,EAFpE,EAEoEA,oBAAqBd,EAFzF,EAEyFA,gBAAiBU,EAF1G,EAE0GA,kBAC7GiB,EAAWV,IAAc1B,GAAWC,YAExC,OACE,yBAAK9K,GAAG,aAAaU,UAAU,kCAC7B,wBAAIA,UAAU,wBAAwB8B,YAAQ,sBAC9C,yBAAK9B,UAAU,wBACb,kBAAC,IAAD,CAAWwM,KAAG,GACZ,kBAAC,IAAD,CAAKxM,UAAU,gBACb,kBAAC,IAAD,CAAOA,UAAU,eAAe6D,MAAO6G,EAAgBtG,SAAU/E,KAAKmL,oBAAqB5E,UAAW2G,IACrGlN,KAAKsE,MAAM6H,oBACV,yBAAKxL,UAAU,uCACZX,KAAKsE,MAAM8H,gBACV,uBAAGzL,UAAU,qDACb,uBAAGA,UAAU,iDAEf,0BAAMA,UAAS,eAAUX,KAAKsE,MAAM8H,gBAAkB,QAAS,YAAcD,MAKpFnM,KAAKsE,MAAMkI,YAAc1B,GAAWC,aACnC,kBAAC,IAAD,CAAWoC,KAAG,GACZ,kBAAC,IAAD,CAAKxM,UAAU,gBACZ8L,EACC,yBAAK9L,UAAU,yBACb,kBAAC,IAAD,CAAOA,UAAU,cAAc6D,MAAO+G,EAAiBxG,SAAU/E,KAAKsL,qBACtE,4BAAQ3K,UAAS,sCAAiC0L,EAAsB,SAAW,WAAlE,YAAiFI,EAAuB,OAAS,IAAMxH,QAASjF,KAAKsM,WAAYhG,UAAW+F,GAAsBJ,IAGrM,4BAAQtL,UAAS,0BAAqB0L,EAAsB,UAAY,WAAvD,YAAsEI,EAAuB,OAAS,IAAMxH,QAASjF,KAAKsM,WAAYhG,UAAW+F,GAAsBJ,KAM9LjM,KAAKsE,MAAMkI,YAAc1B,GAAWG,eAAiBwB,GACrD,kBAAC,IAAD,CAAW9L,UAAU,OACnB,4BAAQA,UAAS,0BAAqB4K,EAAkB,UAAY,YAActG,QAASjF,KAAK6M,gBAAiBvG,UAAWiF,GAAkB9I,YAAQ,uBAGzJzC,KAAKsE,MAAMkI,YAAc1B,GAAWC,aACnC,kBAAC,IAAD,CAAWpK,UAAU,OACnB,4BAAQA,UAAU,0BAA0BsE,QAASjF,KAAK8M,mBAAoBrK,YAAQ,+B,GAxN5EnB,IAAMC,WCT5B6L,GACE5L,OAAOC,IAAIC,YADb0L,iCA+DaC,G,YA1Db,WAAY3M,GAAQ,IAAD,8BACjB,4CAAMA,KAgBR4M,YAAc,SAAC/H,GACTA,EAAEC,OAAO2D,SACX,EAAK5F,SAAS,CACZgK,gBAAiBC,SAASjI,EAAEC,OAAOhB,UApBtB,EAyBnBiJ,WAAa,SAAClI,GACZA,EAAEK,iBACFzC,IAAauK,gCAAgC,EAAKpJ,MAAMiJ,iBAAiBlK,MAAK,SAACC,GAC7Ef,IAAQmB,QAAQjB,YAAQ,eACvBkB,OAAM,SAACC,GACR,IAAIb,EAAWc,IAAMC,YAAYF,GACjCrB,IAAQC,OAAOO,OA3BjB,EAAK4K,gBAAkB,CACrB,CAACC,SAAU,EAAGvM,KAAMoB,YAAQ,sBAC5B,CAACmL,SAAU,KAAMvM,KAAMoB,YAAQ,aAC/B,CAACmL,SAAU,MAAOvM,KAAMoB,YAAQ,gBAChC,CAACmL,SAAU,MAAOvM,KAAMoB,YAAQ,YAChC,CAACmL,SAAU,OAAQvM,KAAMoB,YAAQ,cAGnC,EAAK6B,MAAQ,CACXiJ,gBAAiBH,IAbF,E,sEAmCT,IAAD,OACCG,EAAoBvN,KAAKsE,MAAzBiJ,gBACR,OACE,yBAAK5M,UAAU,eAAeV,GAAG,gBAC/B,wBAAIU,UAAU,wBAAwB8B,YAAQ,wCAC9C,uBAAG9B,UAAU,QAAQ8B,YAAQ,kFAC7B,0BAAM0D,OAAO,OAAOD,OAAO,GAAGjG,GAAG,iCAAiCmG,SAAUpG,KAAKyN,YAC9EzN,KAAK2N,gBAAgB9M,KAAI,SAACC,EAAMC,GAC/B,OACE,kBAAC,IAAMqH,SAAP,CAAgBnH,IAAKF,GACnB,2BAAOwD,KAAK,QAAQlC,KAAK,WAAWmC,MAAO1D,EAAK8M,SAAUjN,UAAU,eAAeV,GAAE,yBAAoBc,EAAQ,GAAKoI,QAASoE,IAAoBzM,EAAK8M,SAAU7I,SAAU,EAAKuI,cACjL,2BAAO3M,UAAU,wBAAwB0F,QAAO,yBAAoBtF,EAAQ,IAAMD,EAAKO,MACvF,iCAIN,4BAAQkD,KAAK,SAAS5D,UAAU,gCAAgC8B,YAAQ,iB,GArDxDnB,IAAMC,W,6DC0B5BC,OAAOC,IAAIC,aARbmM,G,GAAAA,kBAAmBC,G,GAAAA,sBAAuBC,G,GAAAA,qBAC1CC,G,GAAAA,kBACAC,G,GAAAA,mBACAC,G,GAAAA,qBACAnE,G,GAAAA,iBACAC,G,GAAAA,aACAmE,G,GAAAA,oBACAC,G,GAAAA,gBAGIC,G,YAEJ,WAAY3N,GAAQ,IAAD,8BACjB,4CAAMA,KA6BRoF,eAAiB,SAAClF,GAChBuC,IAAa2C,eAAelF,GAAMyC,MAAK,SAACC,GACtC,EAAKC,SAAS,CAACwC,SAAUzC,EAAI1C,OAC7B2B,IAAQmB,QAAQjB,YAAQ,eACvBkB,OAAM,SAACC,GACR,IAAI0K,EAAazK,IAAMC,YAAYF,GACnCrB,IAAQC,OAAO8L,OApCA,EAwCnBC,gBAAkB,SAACzN,GACjB,IAAI0N,EAAM5F,IAAW,aAAe9H,EAAK2N,aAAe,WAAa3N,EAAKuB,KAAO,IACjFsG,SAASxH,KAAOqN,GA1CC,EA6CnBE,oBAAsB,SAACnJ,GACrB,IAAMoJ,EAAYpJ,EAAEC,OAAOmJ,UACrBC,EAAW,EAAKC,aAAaC,QAAO,SAAChO,EAAMC,GAC/C,OAAOD,EAAKE,MAAQ+N,SAASC,eAAelO,EAAKK,KAAKC,OAAO,IAAI6N,UAAY,GAAKN,KAEhFC,EAAS1M,QACX,EAAKqB,SAAS,CACZrC,UAAW0N,EAASA,EAAS1M,OAAQ,GAAGf,KAAKC,OAAO,MAlDxD,EAAKyN,aAAe,CAClB,CAAC7N,MAAM,EAAMG,KAAM,mBAAoBE,KAAMoB,YAAQ,YACrD,CAACzB,KAAM6M,GAAmB1M,KAAM,sBAAuBE,KAAMoB,YAAQ,aACrE,CAACzB,KAAMoN,GAAiBjN,KAAM,cAAeE,KAAMoB,YAAQ,sBAC3D,CAACzB,KAAMiN,GAAoB9M,KAAM,wBAAyBE,KAAMoB,YAAQ,oBACxE,CAACzB,KAAMgN,GAAmB7M,KAAM,wBAAyBE,KAAMoB,YAAQ,wBACvE,CAACzB,MAAM,EAAMG,KAAM,gBAAiBE,KAAMoB,YAAQ,aAClD,CAACzB,KAAMkO,IAAO/N,KAAM,gBAAiBE,KAAMoB,YAAQ,uBACnD,CAACzB,KAAMkN,GAAsB/M,KAAM,mBAAoBE,KAAMoB,YAAQ,8BACrE,CAACzB,KAAO+I,IAAoBC,GAAe7I,KAAM,eAAgBE,KAAMoB,YAAQ,iBAC/E,CAACzB,KAAMmN,GAAqBhN,KAAM,eAAgBE,KAAMoB,YAAQ,oBAGlE,EAAK6B,MAAQ,CACXpD,UAAW,EAAK2N,aAAa,GAAG1N,KAAKC,OAAO,GAC5C2E,SAAU,MAjBK,E,iFAqBE,IAAD,OAClB5C,IAAagM,cAAc9L,MAAK,SAACC,GAC/B,EAAKC,SAAS,CAACwC,SAAUzC,EAAI1C,UAC5B+C,OAAM,SAAAC,GACP,IAAI0K,EAAazK,IAAMC,YAAYF,GACnCrB,IAAQC,OAAO8L,Q,+BAgCjB,IAAIc,EAAoB3M,YAAQ,gBAChC,OACE,kBAAC,IAAM2F,SAAP,KACE,yBAAKzH,UAAU,4BACb,yBAAKA,UAAU,6CACb,uBAAGQ,KAAMyH,KACP,yBAAKjE,IAAK0K,IAAWC,IAAUzK,OAAQ0K,IAAY3K,MAAO4K,IAAWC,MAAOC,IAAW5K,IAAI,UAE7F,yBAAKnE,UAAU,kBACb,kBAAC,KAAD,CAAcgP,YAAaP,EAAmBb,gBAAiBvO,KAAKuO,kBACpE,kBAAC,KAAD,MACA,kBAAC,KAAD,QAGJ,yBAAK5N,UAAU,6BACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAASC,KAAMZ,KAAK6O,aAAc3N,UAAWlB,KAAKsE,MAAMpD,aAE1D,yBAAKP,UAAU,iCACb,wBAAIA,UAAU,WAAW8B,YAAQ,aACjC,yBAAK9B,UAAU,4BAA4BiP,SAAU5P,KAAK0O,qBACxD,yBAAKzO,GAAG,kBAAkBU,UAAU,gBAClC,wBAAIA,UAAU,wBAAwB8B,YAAQ,oBAC9C,kBAAC,EAAD,MACCzC,KAAKsE,MAAMyB,UAAY,kBAAC,EAAD,CAAmBA,SAAU/F,KAAKsE,MAAMyB,SAAUD,eAAgB9F,KAAK8F,kBAEhG+H,IACD,yBAAK5N,GAAG,qBAAqBU,UAAU,gBACrC,wBAAIA,UAAU,wBAAwB8B,YAAQ,aAC7CsL,IACD,2BAAItL,YAAQ,mJACZ,uBAAGtB,KAAI,UAAKyH,IAAL,6BAA0CjI,UAAU,2BAA2BmN,KAGvFM,IAAmBpO,KAAKsE,MAAMyB,UAC7B,kBAAC,GAAD,CAAWiH,aAAchN,KAAKsE,MAAMyB,SAAS8J,aAE9C5B,IAAsB,kBAAC,EAAD,MACtBD,IAAqBhO,KAAKsE,MAAMyB,UACjC,kBAAC,EAAD,CAAmBA,SAAU/F,KAAKsE,MAAMyB,SAAUD,eAAgB9F,KAAK8F,iBACvE,kBAAC,EAAD,MACCoJ,KAAS,kBAAC,GAAD,MACThB,IAAwB,kBAAC,EAAD,OACvBnE,IAAoBC,KAAiB,kBAAC,EAAD,MACtCmE,IAAuB,kBAAC,EAAD,e,GAxGjB7M,IAAMC,WAkH7BuO,IAASC,OACP,kBAAC,GAAD,MACAhB,SAASC,eAAe,a,yHCpJ1BgB,IAAOC,OAAOC,KAOd,IA+FeC,E,2MAhCbC,kBAAoB,WAClB,IAAItP,EAAO,EAAKJ,MAAM2P,YACJ,IAAdvP,EAAKwP,MAGT,EAAK5P,MAAM0P,kBAAkBtP,I,qFA7D7B,IAAIuP,EAAarQ,KAAKU,MAAM2P,WACxBE,EAAaF,EAAW9L,KACxBiM,EAASH,EAAWG,OAExB,GAVkC,yBAU9BD,EAA8C,CAChD,IAAI9M,EAAa+M,EAAOC,WAAWC,2BAE/BC,EAAYH,EAAOC,WAAWG,qBAE9BC,EAAaL,EAAOM,OAAOzO,KAE3B0O,EAAa,aADDnI,IAAW,aAAe4H,EAAOM,OAAOrC,aAAe,WAAcoC,EAAa,KACvD,MAAQA,EAAa,OAE5DG,EAASvO,YAAQ,+DAIrB,MAAO,CAACgB,aAAYuN,OADpBA,GADAA,EAASA,EAAOhO,QAAQ,eAAgB2N,IACxB3N,QAAQ,gBAAiB+N,IAItC,GAzBoB,gBAyBhBR,EAAqC,CAAC,IACrClM,EAAsBmM,EAAtBnM,KAAM4M,EAAgBT,EAAhBS,YACNC,EAAc7M,EAAd6M,UACwBzN,EAAiCwN,EAAzDE,uBAAoCC,EAAqBH,EAArBG,iBAS5C,MAAO,CAAC3N,aAAYuN,OAPfI,EAIM3O,YAAQ,+CACDO,QAAQ,eAAgBoO,GAAkBpO,QAAQ,aAAckO,GAJvEzO,YAAQ,iDACDO,QAAQ,aAAckO,IAQrC,GA1C0B,sBA0CtBX,EAA2C,CAElD,IAAI9M,EAAa+M,EAAOa,uBAEpBC,EAAad,EAAOe,iBAEpBC,EAAW5I,IAAW,WAAa4H,EAAOiB,kBAAoB,IAC9DC,EAAYlB,EAAOmB,WAEnBX,EAASvO,YAAQ,wCACjBmP,EAAW,WAAaJ,EAAW,IAAMF,EAAa,OAK1D,MAAO,CAAC7N,aAAYuN,OAFpBA,GADAA,EAASA,EAAOhO,QAAQ,cAAe4O,IACvB5O,QAAQ,UAAW0O,IAKrC,MAAO,CAACjO,WAAa,KAAMuN,OAAS,Q,+BAYpC,IAAIX,EAAarQ,KAAKU,MAAM2P,WADrB,EAEsBrQ,KAAK6R,sBAA5BpO,EAFC,EAEDA,WAAYuN,EAFX,EAEWA,OAElB,OAAKvN,GAAeuN,EAKlB,wBAAI/L,QAASjF,KAAKoQ,kBAAmBzP,UAAW0P,EAAWC,KAAO,OAAS,UACzE,yBAAK3P,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKgE,IAAKlB,EAAYmB,MAAM,KAAKC,OAAO,KAAKlE,UAAU,SAASmE,IAAI,KACpE,uBAAGnE,UAAU,QAAQmR,wBAAyB,CAACC,OAAQf,MAEzD,uBAAGrQ,UAAU,QAAQqP,IAAOK,EAAW2B,MAAMC,aAV1C,O,GAxEY3Q,IAAMC,WCZzB2Q,E,YACJ,WAAYxR,GAAQ,IAAD,8BACjB,4CAAMA,KAcRuE,QAAU,WACJ,EAAKX,MAAM6N,YACbhP,IAAaiP,sBACb,EAAK7O,SAAS,CACZ4O,YAAY,EACZE,YAAa,MAGf,EAAKC,cACL,EAAK/O,SAAS,CAAC4O,YAAY,MAxBZ,EA4BnBG,YAAc,WAGZnP,IAAaoP,kBAFF,EACG,GACgClP,MAAK,SAAAC,GACjD,IAAIkP,EAAalP,EAAI1C,KAAK6R,kBAC1B,EAAKlP,SAAS,CAACiP,WAAYA,QAjCZ,EAqCnBpC,kBAAoB,SAACC,GACnB,IAAImC,EAAa,EAAKlO,MAAMkO,WAAW3R,KAAI,SAAAC,GAIzC,OAHIA,EAAKb,KAAOoQ,EAAWpQ,KACzBa,EAAKwP,MAAO,GAEPxP,KAETqC,IAAauP,iBAAiBrC,EAAWpQ,IACzC,IAAIoS,EAAyC,IAA3B,EAAK/N,MAAM+N,YAAoB,EAAI,EAAK/N,MAAM+N,YAAc,EAC9E,EAAK9O,SAAS,CACZiP,WAAYA,EACZH,YAAaA,KA9Cf,EAAK/N,MAAQ,CACX6N,YAAY,EACZE,YAAa,EACbG,WAAY,IALG,E,iFASE,IAAD,OAClBrP,IAAawP,6BAA6BtP,MAAK,SAAAC,GAC7C,EAAKC,SAAS,CAAC8O,YAAa/O,EAAI1C,KAAKgS,oB,+BA0C/B,IAAD,OAEP,OACE,yBAAK3S,GAAG,iBACN,0BAAMgF,QAASjF,KAAKiF,QAAStE,UAAU,qBAAqBV,GAAG,cAAcwP,MAAM,gBAAgBoD,aAAW,iBAC5G,0BAAMlS,UAAU,iCAChB,0BAAMA,UAAS,cAASX,KAAKsE,MAAM+N,YAAc,GAAK,SAAWrS,KAAKsE,MAAM+N,cAE9E,yBAAKpS,GAAG,iBAAiBU,UAAS,qBAAgBX,KAAKsE,MAAM6N,WAAa,GAAI,SAC5E,yBAAKxR,UAAU,8BAA6B,yBAAKA,UAAU,iBAC3D,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,0BAA0B8B,YAAQ,kBAChD,0BAAMwC,QAASjF,KAAKiF,QAASwK,MAAOhN,YAAQ,SAAUoQ,aAAYpQ,YAAQ,SAAU9B,UAAU,6FAEhG,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,eACXX,KAAKsE,MAAMkO,WAAW3R,KAAI,SAAAC,GACzB,OAAQ,kBAAC,EAAD,CAAYG,IAAKH,EAAKb,GAAIoQ,WAAYvP,EAAMsP,kBAAmB,EAAKA,wBAGhF,uBAAGjP,KAAMyH,IAAW,qBAAsBjI,UAAU,YAAY8B,YAAQ,iC,GA1EzDnB,IAAMC,WAkFlB2Q,O,yICzDAY,E,2MApBbC,eAAiB,WACf,IAAIjS,EAAO,EAAKJ,MAAMI,KACtB,EAAKJ,MAAMsS,mBAAmBlS,I,wEAI9B,IAAIA,EAAOd,KAAKU,MAAMI,KACtB,OACE,wBAAIH,UAAU,4BAA4BsE,QAASjF,KAAK+S,gBACtD,0BAAMpS,UAAU,kCAChB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,sBAAsBG,EAAKuB,Y,GAbrBf,IAAMC,W,SCO/B0R,E,YAEJ,WAAYvS,GAAQ,IAAD,8BACjB,4CAAMA,KAcRwS,eAAiB,WACf,EAAK3P,SAAS,CACZqB,MAAO,QACPuO,YAAY,EACZC,aAAa,KAnBE,EAuBnBC,eAAiB,WACf,EAAKC,kBAxBY,EA2BnBN,mBAAqB,SAAClS,GACpB,EAAKwS,iBACL,EAAK5S,MAAM6N,gBAAgBzN,IA7BV,EAgCnByS,gBAAkB,SAACnI,GACjB,IAAIoI,EAAK,eACT,EAAKjQ,SAAS,CAACiB,MAAO4G,EAAM5F,OAAOhB,QACnC,IAAIiP,EAAWrI,EAAM5F,OAAOhB,MAC5B,GAAI,EAAKkP,aAAeD,EAAS1M,OAC/B,OAAO,EAIT,GAFA,EAAK2M,WAAaD,EAAS1M,OAEH,KAApB,EAAK2M,YAAqBF,EAAMG,eAAe,EAAKD,YAAc,EAKpE,OAJA,EAAKnQ,SAAS,CACZqQ,cAAc,EACdC,gBAAgB,KAEX,EAET,IAAIC,EAAY,CACdC,EAAGN,GAGD,EAAK5H,OACPmI,aAAa,EAAKnI,OAGpB,EAAKA,MAAQoI,WAAWT,EAAMU,gBAAgBJ,GAAY,MAxDzC,EAsJnBK,eAAiB,WACf,EAAK5Q,SAAS,CACZ6Q,mBAAoB,EAAK9P,MAAM8P,kBAC/BjB,YAAa,EAAK7O,MAAM6O,cAvJ1B,EAAK7O,MAAQ,CACXM,MAAO,UACPJ,MAAO,GACP6P,YAAa,GACblB,YAAY,EACZS,cAAc,EACdC,gBAAgB,EAChBT,aAAa,EACbgB,mBAAmB,GAErB,EAAKV,WAAa,GAZD,E,6EA2DHI,GAEd9T,KAAKuD,SAAS,CACZqQ,cAAc,EACdC,gBAAgB,IAGlB7T,KAAKsU,YAAYR,K,kCAGPA,GAAY,IAAD,OACrB3Q,IAAaoR,iBAAiBlR,MAAK,SAACC,GAClC,IAAIkR,EAAgBlR,EAAI1C,KAAK6T,eAAe3F,QAAO,SAAAhO,GACjD,OAAO,IAAIhB,IAAUgB,MAEnB4T,EAAiB,GACrBF,EAAcG,SAAQ,SAAA7D,GACpB,IAAI8D,EAAa9D,EAAOzQ,WAAWyO,QAAO,SAAAhO,GACxC,OAAOA,EAAKuB,KAAKS,QAAQgR,EAAUC,IAAM,KAEvCa,EAAW1S,OAAS,GACtBwS,EAAeG,KAAf,MAAAH,EAAc,YAASE,OAG3B,EAAKrR,SAAS,CACZ8Q,YAAaK,EACbb,gBAAgB,S,qCAKPiB,GAEb,IADA,IAAWC,EAAP1N,EAAI,EAAS2N,EAAM,EAChB3N,EAAIyN,EAAI5S,OAAQmF,IAER,MADb0N,EAAOD,EAAIG,WAAW5N,IAEpB2N,GAAO,EACED,EAAO,IAChBC,GAAO,EACED,GAAQ,KAAUA,GAAQ,KACnCC,GAAO,EACED,GAAQ,MAAUA,GAAQ,QACnCC,GAAO,GAGX,OAAOA,I,uCAIPhV,KAAK0T,WAAa,KAClB1T,KAAKuD,SAAS,CACZqB,MAAO,GACPJ,MAAO,GACP2O,YAAY,EACZC,aAAa,EACbQ,cAAc,EACdC,gBAAgB,EAChBQ,YAAa,GACbD,mBAAmB,M,2CAID,IAAD,OACnB,GAAKpU,KAAKsE,MAAMsP,aAGhB,OAAK5T,KAAKsE,MAAMuP,gBAAkB7T,KAAK2T,eAAe3T,KAAK0T,YAAc,EAErE,0BAAM/S,UAAU,6BAGfX,KAAKsE,MAAM+P,YAAYnS,OAM1B,wBAAIvB,UAAU,sBACXX,KAAKsE,MAAM+P,YAAYxT,KAAI,SAAAC,GAC1B,OACE,kBAAC,EAAD,CACEG,IAAKH,EAAKb,GACVa,KAAMA,EACNkS,mBAAoB,EAAKA,yBAV/B,yBAAKrS,UAAU,sBAAsB8B,YAAQ,2B,+BA0BjD,IACIyS,EAAQ,CAAC,MADoB,YAArBlV,KAAKsE,MAAMM,MAAsB5E,KAAKsE,MAAMM,MAAQ,IAGhE,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYuQ,MAAM,sBAChB,yBAAKxU,UAAU,UACb,yBAAKA,UAAS,sBAAiBX,KAAKsE,MAAM6O,WAAa,GAAK,QAAUlO,QAASjF,KAAKqT,iBACpF,yBAAK1S,UAAU,oBACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qEACb,2BACE4D,KAAK,OACL5D,UAAU,4BACV0B,KAAK,QACLsN,YAAa3P,KAAKU,MAAMiP,YACxBuF,MAAOA,EACP1Q,MAAOxE,KAAKsE,MAAME,MAClB4Q,QAASpV,KAAKkT,eACdnO,SAAU/E,KAAKuT,gBACf8B,aAAa,QAEdrV,KAAKsE,MAAM8O,aAAe,uBAAGzS,UAAU,oEAAoEsE,QAASjF,KAAKqT,kBAE5H,yBAAK1S,UAAU,2BACZX,KAAKsV,yBAKd,kBAAC,IAAD,CAAYH,MAAM,wBAChB,yBAAKxU,UAAU,yBACb,uBAAGA,UAAU,6CAA6CsE,QAASjF,KAAKmU,kBAEzEnU,KAAKsE,MAAM8P,mBACV,yBAAKzT,UAAU,UACb,yBAAKA,UAAS,sBAAiBX,KAAKsE,MAAM6O,WAAa,GAAK,QAAUlO,QAASjF,KAAKqT,iBACpF,yBAAK1S,UAAU,oBACb,yBAAKA,UAAU,cACb,2BACE4D,KAAK,OACL5D,UAAU,4BACV0B,KAAK,QACLsN,YAAa3P,KAAKU,MAAMiP,YACxBuF,MAAOA,EACP1Q,MAAOxE,KAAKsE,MAAME,MAClB4Q,QAASpV,KAAKkT,eACdnO,SAAU/E,KAAKuT,gBACf8B,aAAa,QAEf,uBAAG1U,UAAU,mEAAmEuU,MAAO,CAACK,MAAO,MAEjG,yBAAK5U,UAAU,2BACZX,KAAKsV,8B,GArNG/T,aAkOZ0R,O","file":"static/js/settings.chunk.js","sourcesContent":["class Workspace {\n\n  constructor(obj) {\n    this.id = obj.id || '';\n    this.group_id = obj.group_id || '';\n    this.owner_name = obj.owner_name || '';\n    this.owner_type = obj.owner_type || '';\n    this.table_list = obj.table_list || [];\n    this.group_owner = obj.group_owner || '';\n    this.group_admins = obj.group_admins || [];\n    this.group_shared_tables = [];\n  }\n\n}\n\nexport default Workspace;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  data: PropTypes.array,\n  curItemID: PropTypes.string,\n};\n\nclass SideNav extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <ul className=\"nav flex-column user-setting-nav\">\n        {this.props.data.map((item, index) => {\n          return item.show ?\n            <li key={index} className={`nav-item ${this.props.curItemID === item.href.substr(1) && 'active'}`}><a className=\"nav-link\" href={item.href}>{item.text}</a></li> : null;\n        })}\n      </ul>\n    );\n  }\n}\n\nSideNav.propTypes = propTypes;\n\nexport default SideNav; \n","import React from 'react';\nimport { gettext } from '../../utils/constants';\nimport { dtableWebAPI } from '../../utils/dtable-web-api';\nimport toaster from '../toast';\nimport { Utils } from '../../utils/utils';\n\nconst { avatarURL, csrfToken } = window.app.pageOptions;\n\nclass UserAvatarForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n    this.form = React.createRef();\n    this.state = {\n      avatarSrc: avatarURL,\n      isEditShown: false\n    };\n  }\n\n  fileInputChange = () => {\n\n    // no file selected\n    if (!this.fileInput.current.files.length) {\n      return;\n    }\n\n    const file = this.fileInput.current.files[0];\n    const fileName = file.name; \n\n    // no file extension\n    if (fileName.lastIndexOf('.') === -1) {\n      toaster.danger(gettext('Please choose an image file.'), {\n        duration: 5\n      });\n      return false;\n    }\n\n    const fileExt = fileName.substr((fileName.lastIndexOf('.') + 1)).toLowerCase();\n    const allowedExt = ['jpg','jpeg', 'png', 'gif'];\n    if (allowedExt.indexOf(fileExt) === -1) {\n      const errorMsg = gettext('File extensions can only be {placeholder}.')\n        .replace('{placeholder}', allowedExt.join(', '));\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    // file size should be less than 1MB\n    if (file.size > 1024*1024) {\n      const errorMsg = gettext('The file is too large. Allowed maximum size is 1MB.');\n      toaster.danger(errorMsg, {duration: 5});\n      return false;\n    }\n\n    //this.form.current.submit();\n    dtableWebAPI.updateUserAvatar(file, 160).then((res) => {\n      this.setState({\n        avatarSrc: res.data.avatar_url\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  openFileInput = () => {\n    this.fileInput.current.click();\n  }\n\n  handleMouseOver = () => {\n    this.setState({\n      isEditShown: true\n    });\n  }\n\n  handleMouseOut = () => {\n    this.setState({\n      isEditShown: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"form-group row\">\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n        <label className=\"col-sm-1 col-form-label\">{gettext('Avatar:')}</label>\n        <div className=\"col-auto position-relative\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\n          <img src={this.state.avatarSrc} width=\"80\" height=\"80\" alt=\"\" className=\"user-avatar\" />\n          <input type=\"file\" name=\"avatar\" className=\"d-none\" onChange={this.fileInputChange} ref={this.fileInput} />\n          <span className={`avatar-edit dtable-font dtable-icon-rename ${!this.state.isEditShown && 'd-none'}`} onClick={this.openFileInput}></span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserAvatarForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  userInfo: PropTypes.object,\n  updateUserInfo: PropTypes.func\n};\n\nconst { \n  nameLabel,\n  enableUpdateUserInfo,\n  enableUserSetContactEmail\n} = window.app.pageOptions;\n\nclass UserBasicInfoForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const {\n      contact_email,\n      login_id,\n      name\n    } = this.props.userInfo;\n    this.state = {\n      contactEmail: contact_email,\n      loginID: login_id,\n      name: name\n    };\n  }\n\n  handleNameInputChange = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleContactEmailInputChange = (e) => {\n    this.setState({\n      contactEmail: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {\n      name: this.state.name\n    };\n    if (enableUserSetContactEmail) {\n      data.contact_email = this.state.contactEmail;\n    }\n    this.props.updateUserInfo(data);\n  }\n\n  render() {\n    const {\n      contactEmail,\n      loginID,\n      name\n    } = this.state;\n\n    return (\n      <form action=\"\" method=\"post\" onSubmit={this.handleSubmit}>\n\n        <div className=\"form-group row\">\n          <label className=\"col-sm-1 col-form-label\" htmlFor=\"name\">{nameLabel}</label>\n          <div className=\"col-sm-5\">\n            <input className=\"form-control\" id=\"name\" type=\"text\" name=\"nickname\" value={name} disabled={!enableUpdateUserInfo} onChange={this.handleNameInputChange} />\n          </div>\n        </div>\n\n        {loginID && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"user-name\">{gettext('Username:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"user-name\" type=\"text\" name=\"username\" value={loginID} disabled={true} readOnly={true} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('You can use this field at login.')}</p>\n          </div>\n        )}\n\n        {(contactEmail || enableUserSetContactEmail) && (\n          <div className=\"form-group row\">\n            <label className=\"col-sm-1 col-form-label\" htmlFor=\"contact-email\">{gettext('Contact Email:')}</label>\n            <div className=\"col-sm-5\">\n              <input className=\"form-control\" id=\"contact-email\" type=\"text\" name=\"contact_email\" value={contactEmail} disabled={!enableUserSetContactEmail} readOnly={!enableUserSetContactEmail} onChange={this.handleContactEmailInputChange} />\n            </div>\n            <p className=\"col-sm-5 m-0 input-tip\">{gettext('Your notifications will be sent to this email.')}</p>\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"btn btn-outline-primary offset-sm-1\" disabled={!enableUpdateUserInfo}>{gettext('Submit')}</button>\n      </form>\n    );\n  }\n}\n\nUserBasicInfoForm.propTypes = propTypes;\n\nexport default UserBasicInfoForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  password: PropTypes.string.isRequired,\n  updatePassword: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass UpdateWebdavPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      password: this.props.password,\n      isPasswordVisible: false,\n      btnDisabled: false\n    };\n  }\n\n  submit = () => {\n    this.setState({\n      btnDisabled: true\n    });\n    this.props.updatePassword(this.state.password);\n  }\n\n  handleInputChange = (e) => {\n    let passwd = e.target.value.trim();\n    this.setState({password: passwd});\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  generatePassword = () => {\n    let randomPassword = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < 8; i++) {\n      randomPassword += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    this.setState({\n      password: randomPassword,\n      isPasswordVisible: true\n    });\n  }\n\n  render() {\n    const { toggle } = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('WebDav Password')}</ModalHeader>\n        <ModalBody>\n          <InputGroup className=\"\">\n            <Input type={this.state.isPasswordVisible ? 'text' : 'password'} value={this.state.password} onChange={this.handleInputChange} />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={this.togglePasswordVisible}><i className={`dtable-font ${this.state.isPasswordVisible ? 'dtable-icon-eye': 'dtable-icon-eye-slash'}`}></i></Button>\n              <Button onClick={this.generatePassword}><i className=\"dtable-font dtable-icon-random-generation\"></i></Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.submit} disabled={this.state.btnDisabled}>{gettext('Submit')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nUpdateWebdavPassword.propTypes = propTypes;\n\nexport default UpdateWebdavPassword;\n","import React from 'react';\nimport ModalPortal from '../modal-portal';\nimport { gettext } from '../../utils/constants';\nimport { dtableWebAPI } from '../../utils/dtable-web-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\nimport UpdateWebdavPassword from '../dialog/update-webdav-password';\n\nconst { webdavPasswd } = window.app.pageOptions;\n\nclass WebdavPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: webdavPasswd,\n      isPasswordVisible: false,\n      isDialogOpen: false\n    };\n  }\n\n  togglePasswordVisible = () => {\n    this.setState({\n      isPasswordVisible: !this.state.isPasswordVisible\n    });\n  }\n\n  updatePassword = (password) => {\n    dtableWebAPI.updateWebdavSecret(password).then((res) => {\n      this.toggleDialog();\n      this.setState({\n        password: password\n      });\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.toggleDialog();\n      toaster.danger(errorMsg);\n    }); \n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isDialogOpen: !this.state.isDialogOpen\n    });\n  }\n\n  render() {\n    const { password, isPasswordVisible } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"update-webdav-passwd\" className=\"setting-item\">\n          <h3 className=\"setting-item-heading\">{gettext('WebDav Password')}</h3>\n          {password ? (\n            <React.Fragment>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"m-0 mr-2\">{gettext('Password:')}</label>\n                <input className=\"border-0 mr-1\" type=\"text\" value={isPasswordVisible ? password : '**********'} readOnly={true} size={Math.max(password.length, 10)} />\n                <span onClick={this.togglePasswordVisible} className={`eye-icon dtable-font ${this.state.isPasswordVisible ? 'dtable-icon-eye': 'dtable-icon-eye-slash'}`}></span>\n              </div>\n              <button className=\"btn btn-outline-primary mt-2\" onClick={this.toggleDialog}>{gettext('Update')}</button>\n            </React.Fragment>\n          ) : (\n            <button className=\"btn btn-outline-primary\" onClick={this.toggleDialog}>{gettext('Set Password')}</button>\n          )}\n        </div>\n        {this.state.isDialogOpen && (\n          <ModalPortal>\n            <UpdateWebdavPassword\n              password={this.state.password}\n              updatePassword={this.updatePassword}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WebdavPassword;\n","import React from 'react';\nimport Select from 'react-select';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  currentLang, langList\n} = window.app.pageOptions;\n\nclass LanguageSetting extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onSelectChange = (selectedItem) => {\n    // selectedItem: {value: '...', label: '...'}\n    location.href = `${siteRoot}i18n/?lang=${selectedItem.value}`;\n  }\n\n  render() {\n    const options = langList.map((item, index) => {\n      return {\n        value: item.langCode,\n        label: item.langName\n      };\n    });\n\n    return (\n      <div className=\"setting-item\" id=\"lang-setting\">\n        <h3 className=\"setting-item-heading\">{gettext('Language Setting')}</h3>\n        <Select\n          className='language-selector'\n          defaultValue={{value: currentLang.langCode, label: currentLang.langName}}\n          options={options}\n          onChange={this.onSelectChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LanguageSetting;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  userInfo: PropTypes.object,\n  updateUserInfo: PropTypes.func,\n};\n\nclass ListInAddressBook extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const { list_in_address_book } = this.props.userInfo;\n    this.state = {\n      inputChecked: list_in_address_book \n    };\n  }\n\n  handleInputChange = (e) => {\n    const checked = e.target.checked;\n    this.setState({\n      inputChecked: checked\n    });\n    this.props.updateUserInfo({\n      list_in_address_book: checked.toString()\n    });\n  }\n\n  render() {\n    const { inputChecked } = this.state;\n\n    return (\n      <div className=\"setting-item\" id=\"list-in-address-book\">\n        <h3 className=\"setting-item-heading\">{gettext('Global Address Book')}</h3>\n        <div className=\"d-flex align-items-center\">\n          <input type=\"checkbox\" id=\"list-in-address-book\" name=\"list_in_address_book\" className=\"mr-1\" checked={inputChecked} onChange={this.handleInputChange} />\n          <label htmlFor=\"list-in-address-book\" className=\"m-0\">{gettext('List your account in global address book, so that others can find you by typing your name.')}</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nListInAddressBook.propTypes = propTypes;\n\nexport default ListInAddressBook; \n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\n\nconst {\n  defaultDevice,\n  backupTokens\n} = window.app.pageOptions;\n\nclass TwoFactorAuthentication extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderEnabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Status: enabled')}</p>\n        <a className=\"btn btn-outline-primary mb-4\" href={`${siteRoot}profile/two_factor_authentication/disable/`}>\n          {gettext('Disable Two-Factor Authentication')}</a>\n        <p className=\"mb-2\">\n          {gettext('If you don\\'t have any device with you, you can access your account using backup codes.')}\n          {backupTokens === 1 ? gettext('You have only one backup code remaining.') :\n            gettext('You have {num} backup codes remaining.').replace('{num}', backupTokens)}\n        </p>\n        <a href={`${siteRoot}profile/two_factor_authentication/backup/tokens/`}\n          className=\"btn btn-outline-primary\">{gettext('Show Codes')}</a>\n      </React.Fragment>\n    );\n  }\n\n  renderDisabled = () => {\n    return (\n      <React.Fragment>\n        <p className=\"mb-2\">{gettext('Two-factor authentication is not enabled for your account. Enable two-factor authentication for enhanced account security.')}</p>\n        <a href={`${siteRoot}profile/two_factor_authentication/setup/`} className=\"btn btn-outline-primary\">\n          {gettext('Enable Two-Factor Authentication')}</a>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"setting-item\" id=\"two-factor-auth\">\n        <h3 className=\"setting-item-heading\">{gettext('Two-Factor Authentication')}</h3>\n        {defaultDevice ? this.renderEnabled() : this.renderDisabled()}\n      </div>\n    );\n  }\n}\n\nexport default TwoFactorAuthentication; \n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDisconnectWechat extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  disconnect = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Disconnect')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Are you sure you want to disconnect?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.disconnect}>{gettext('Disconnect')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDisconnectWechat.propTypes = propTypes;\n\nexport default ConfirmDisconnectWechat;\n","import React, { Fragment } from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDisconnectWechat from '../dialog/confirm-disconnect-wechat';\n\nconst {\n  csrfToken,\n  langCode,\n  enableWorkWeixin,\n  enableWeixin,\n  workWixinConnected,\n  wixinConnected,\n  socialNextPage\n} = window.app.pageOptions;\n\nclass SocialLogin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false,\n      disconnectType: '',\n    };\n  }\n\n  confirmDisconnect = (disconnectType) => {\n    this.setState({\n      isConfirmDialogOpen: true,\n      disconnectType: disconnectType,\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    const disconnectUrl = this.state.disconnectType === 'workWeixin' ?\n      `${siteRoot}work-weixin/oauth-disconnect/?next=${encodeURIComponent(socialNextPage)}` :\n      `${siteRoot}weixin/oauth-disconnect/?next=${encodeURIComponent(socialNextPage)}`;\n\n    return (\n      <Fragment>\n        <div className=\"setting-item\" id=\"social-auth\">\n          <h3 className=\"setting-item-heading\">{gettext('Social Login')}</h3>\n          {enableWorkWeixin &&\n            <div className=\"mb-4\">\n              <p className=\"mb-2\">{langCode === 'zh-cn' ? '企业微信' : 'Work Weixin'}</p>\n              {workWixinConnected ?\n                <button className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect.bind(this, 'workWeixin')}>{gettext('Disconnect')}</button> :\n                <a href={`${siteRoot}work-weixin/oauth-connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>}\n            </div>\n          }\n          {enableWeixin &&\n            <div className=\"mb-4\">\n              <p className=\"mb-2\">{langCode === 'zh-cn' ? '微信' : 'WeChat'}</p>\n              {wixinConnected ?\n                <button className=\"btn btn-outline-primary\" onClick={this.confirmDisconnect.bind(this, 'weixin')}>{gettext('Disconnect')}</button> :\n                <a href={`${siteRoot}weixin/oauth-connect/?next=${encodeURIComponent(socialNextPage)}`} className=\"btn btn-outline-primary\">{gettext('Connect')}</a>}\n            </div>\n          }\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDisconnectWechat\n              formActionURL={disconnectUrl}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default SocialLogin; \n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  formActionURL: PropTypes.string.isRequired,\n  csrfToken: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired\n};\n\nclass ConfirmDeleteAccount extends Component {\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  action = () => {\n    this.form.current.submit();\n  }\n\n  render() {\n    const {formActionURL, csrfToken, toggle} = this.props;\n    return (\n      <Modal centered={true} isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{gettext('Delete Account')}</ModalHeader>\n        <ModalBody>\n          <p>{gettext('Really want to delete your account?')}</p>\n          <form ref={this.form} className=\"d-none\" method=\"post\" action={formActionURL}>\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>{gettext('Cancel')}</Button>\n          <Button color=\"primary\" onClick={this.action}>{gettext('Delete')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nConfirmDeleteAccount.propTypes = propTypes;\n\nexport default ConfirmDeleteAccount;\n","import React from 'react';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport ModalPortal from '../modal-portal';\nimport ConfirmDeleteAccount from '../dialog/confirm-delete-account';\n\nconst {\n  csrfToken\n} = window.app.pageOptions;\n\nclass DeleteAccount extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConfirmDialogOpen: false\n    };\n  }\n\n  confirmDelete = (e) => {\n    e.preventDefault();\n    this.setState({\n      isConfirmDialogOpen: true\n    });\n  }\n\n  toggleDialog = () => {\n    this.setState({\n      isConfirmDialogOpen: !this.state.isConfirmDialogOpen\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"setting-item\" id=\"del-account\">\n          <h3 className=\"setting-item-heading\">{gettext('Delete Account')}</h3>\n          <p className=\"mb-2\">{gettext('This operation will not be reverted. Please think twice!')}</p>\n          <button className=\"btn btn-outline-primary\" onClick={this.confirmDelete}>{gettext('Delete')}</button>\n        </div>\n        {this.state.isConfirmDialogOpen && (\n          <ModalPortal>\n            <ConfirmDeleteAccount\n              formActionURL={`${siteRoot}profile/delete/`}\n              csrfToken={csrfToken}\n              toggle={this.toggleDialog}\n            />\n          </ModalPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DeleteAccount; \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { FormGroup, Input, Col } from 'reactstrap';\nimport { dtableWebAPI } from '../../utils/dtable-web-api';\n\nconst BIND_STATE = {\n  BOUND_PHONE: 'bound_phone',\n  UNBOUND_PHONE: 'unbound_phone',\n  BINDING_PHONE: 'binding_phone',\n};\n\nconst propTypes = {\n  oldBindPhone: PropTypes.string,\n};\n\nclass BindPhone extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bindState: BIND_STATE.UNBOUND_PHONE,\n      oldPhoneNumber: props.oldBindPhone,\n      newPhoneNumber: props.oldBindPhone,\n      phoneNumberMessage: '',\n      isSendCodeError: false,\n      inputVerifyCode: '',\n      verifyCodeMessage: '',\n      isVerifyCodeRequired: false,\n      isSendCodeAvailable: false,\n      intervalCount: 60,\n    };\n\n    this.timter = null;\n  }\n\n  componentDidMount() {\n    let { oldBindPhone } = this.props;\n    if (oldBindPhone) {\n      this.setState({\n        bindState: BIND_STATE.BOUND_PHONE\n      });\n    } else {\n      let verifyCodeMessage = gettext('Send Verify Code');\n      this.setState({\n        bindState: BIND_STATE.UNBOUND_PHONE,\n        verifyCodeMessage: verifyCodeMessage,\n        isSendCodeAvailable: true,\n      });\n    }\n  }\n\n  onChangePhoneNumber = (event) => {\n    let value = event.target.value.trim();\n    this.setState({newPhoneNumber: value});\n  }\n  \n  onChangeVerifyCode = (event) => {\n    let value = event.target.value.trim();\n    this.setState({inputVerifyCode: value});\n  }\n\n  validPhone = () => {\n    let reg = /^1[345678]\\d{9}$/g;\n    return this.state.newPhoneNumber.match(reg) !== null;\n  }\n\n  validCode = () => {\n    return this.state.verifyCode !== '';\n  }\n\n  setSendCodeTimer = () => {\n    this.timer = setInterval(() => {\n      let { intervalCount } = this.state;\n      if (intervalCount) {\n        let count = intervalCount - 1;\n        let verifyCodeMessage = gettext('Resend after {count}s').replace('{count}', count);\n        this.setState({\n          intervalCount: count,\n          verifyCodeMessage: verifyCodeMessage,\n        });\n      } else {\n        clearInterval(this.timer);\n        let verifyCodeMessage = gettext('Send Verify Code');\n        this.setState({\n          phoneNumberMessage: '',\n          isSendCodeError: false,\n          verifyCodeMessage: verifyCodeMessage,\n          isSendCodeAvailable: true,\n          intervalCount: 60,\n        });\n      }\n    }, 1000);\n  }\n\n  onSendCode = () => {\n    if(this.validPhone()) {\n      const BIND_PHONE = 'bind_phone';\n      dtableWebAPI.sendVerifyCode(this.state.newPhoneNumber, BIND_PHONE).then((res) => {\n        let phoneNumberMessage = gettext('Verify code has been sent.');\n        this.setState({\n          bindState: BIND_STATE.BINDING_PHONE,\n          phoneNumberMessage: phoneNumberMessage,\n          isSendCodeError: false,\n          isVerifyCodeRequired: true,\n          isSendCodeAvailable: false,\n        });\n        this.setSendCodeTimer();\n      }).catch((error) => {\n        let message = '';\n        if(error.response.status === 400) {\n          message = gettext('Phone number is invalid.');\n        } else if(error.response.status === 429) {\n          message = gettext('Send code too often, please send later.');\n        } else if(error.response.status === 500) {\n          message =  gettext('Internal Server Error.');\n        } else {\n          message = gettext('Please check the network.');\n        }\n        this.setState({\n          phoneNumberMessage: message,\n          isSendCodeError: true,\n        });\n      });\n    } else {\n      let message = gettext('Phone number is invalid.');\n      this.setState({\n        phoneNumberMessage: message,\n        isSendCodeError: true,\n      });\n    }\n  }\n\n  bindPhoneNumber = () => {\n    if(this.validPhone() && this.validCode()) {\n      let { newPhoneNumber, inputVerifyCode } = this.state;\n      dtableWebAPI.bindPhoneNumber(newPhoneNumber, inputVerifyCode).then((res) => {\n        let message = gettext('Phone number has been bound successfully.');\n        if(this.timer) {\n          clearInterval(this.timer);\n        }\n        // reset\n        this.setState({\n          bindState: BIND_STATE.BOUND_PHONE,\n          phoneNumberMessage: message,\n          isSendCodeError: false,\n          inputVerifyCode: '',\n          verifyCodeMessage: '',\n          isVerifyCodeRequired: false,\n          isSendCodeAvailable: false,\n          intervalCount: 60,\n        });\n      }).catch((error) => {\n        let message = '';\n        if(error.response.status === 400) {\n          message = gettext('Phone number is invalid.');\n        } else if(error.response.status === 403) {\n          message = gettext('Code is incorrect.');\n        } else if(error.response.status === 500) {\n          message = gettext('Internal Server Error.');\n        } else {\n          message = gettext('Please check the network.');\n        }\n        this.setState({\n          phoneNumberMessage: message,\n          isSendCodeError: true,\n        });\n      });\n    } else {\n      let message = gettext('Phone number or code is invalid.');\n      this.setState({\n        phoneNumberMessage: message,\n        isSendCodeError: true,\n      });\n    }\n  }\n\n  updatePhoneNumber = () => {\n    let verifyCodeMessage = gettext('Send Verify Code');\n    this.setState({\n      bindState: BIND_STATE.UNBOUND_PHONE,\n      isSendCodeAvailable: true,\n      verifyCodeMessage: verifyCodeMessage,\n    });\n  }\n\n  render() {\n\n    let { bindState, newPhoneNumber, phoneNumberMessage, isVerifyCodeRequired, isSendCodeAvailable, inputVerifyCode, verifyCodeMessage } = this.state;\n    let canEdit = (bindState !== BIND_STATE.BOUND_PHONE);\n\n    return (\n      <div id=\"bind-phone\" className=\"bind-phone-module setting-item\">\n        <h3 className=\"setting-item-heading\">{gettext('Bind Phone Number')}</h3>\n        <div className=\"bind-phone-container\">\n          <FormGroup row>\n            <Col className=\"col-sm-9 row\">\n              <Input className=\"phone-number\" value={newPhoneNumber} onChange={this.onChangePhoneNumber} readOnly={!canEdit} />\n              {this.state.phoneNumberMessage && (\n                <div className=\"col-sm-auto ml-1 bind-phone-message\">\n                  {this.state.isSendCodeError ? \n                    <i className=\"dtable-font dtable-icon-exclamation-circle error\" /> :\n                    <i className=\"dtable-font dtable-icon-check-circle success\" />\n                  }\n                  <span className={`ml-1 ${this.state.isSendCodeError ? 'error': 'success'}`}>{phoneNumberMessage}</span>\n                </div>\n              )}\n            </Col>\n          </FormGroup>\n          {this.state.bindState !== BIND_STATE.BOUND_PHONE && (\n            <FormGroup row>\n              <Col className=\"col-sm-9 row\">\n                {isVerifyCodeRequired ?\n                  <div className=\"verify-code-container\">\n                    <Input className=\"verify-code\" value={inputVerifyCode} onChange={this.onChangeVerifyCode}/>\n                    <button className={`col-sm-auto btn btn-outline-${isSendCodeAvailable ? 'custom' : 'disabled' } ${isVerifyCodeRequired ? 'ml-1' : ''}`} onClick={this.onSendCode} disabled={!isSendCodeAvailable}>{verifyCodeMessage}</button>\n                  </div>\n                  :\n                  <button className={`btn btn-outline-${isSendCodeAvailable ? 'primary' : 'disabled' } ${isVerifyCodeRequired ? 'ml-1' : ''}`} onClick={this.onSendCode} disabled={!isSendCodeAvailable}>{verifyCodeMessage}</button>\n                }\n              </Col>\n            </FormGroup>\n          )}\n          \n          {(this.state.bindState === BIND_STATE.BINDING_PHONE && isVerifyCodeRequired) && (\n            <FormGroup className=\"row\">\n              <button className={`btn btn-outline-${inputVerifyCode ? 'primary' : 'disabled'}`} onClick={this.bindPhoneNumber} disabled={!inputVerifyCode}>{gettext('Bind Phone Number')}</button>\n            </FormGroup>\n          )}\n          {this.state.bindState === BIND_STATE.BOUND_PHONE && (\n            <FormGroup className=\"row\">\n              <button className=\"btn btn-outline-primary\" onClick={this.updatePhoneNumber}>{gettext('Update Phone Number')}</button>\n            </FormGroup>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nBindPhone.propTypes = propTypes;\n\nexport default BindPhone;","import React from 'react';\nimport { gettext } from '../../utils/constants';\nimport { dtableWebAPI } from '../../utils/dtable-web-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst {\n  initialEmailNotificationInterval\n} = window.app.pageOptions;\n\nclass EmailNotice extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // interval: in seconds\n    this.intervalOptions = [\n      {interval: 0, text: gettext('Don\\'t send emails')},\n      {interval: 3600, text: gettext('Per hour')},\n      {interval: 14400, text: gettext('Per 4 hours')},\n      {interval: 86400, text: gettext('Per day')},\n      {interval: 604800, text: gettext('Per week')}\n    ];\n\n    this.state = {\n      currentInterval: initialEmailNotificationInterval\n    };\n  }\n\n  inputChange = (e) => {\n    if (e.target.checked) {\n      this.setState({\n        currentInterval: parseInt(e.target.value)\n      });\n    }\n  }\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    dtableWebAPI.updateEmailNotificationInterval(this.state.currentInterval).then((res) => {\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      toaster.danger(errorMsg);\n    });\n  }\n\n  render() {\n    const { currentInterval } = this.state;\n    return (\n      <div className=\"setting-item\" id=\"email-notice\">\n        <h3 className=\"setting-item-heading\">{gettext('Email Notification of Table Changes')}</h3>\n        <p className=\"mb-1\">{gettext('The list of inserted, deleted and modified rows will be sent to your mailbox.')}</p>\n        <form method=\"post\" action=\"\" id=\"set-email-notice-interval-form\" onSubmit={this.formSubmit}>\n          {this.intervalOptions.map((item, index) => {\n            return (\n              <React.Fragment key={index}>\n                <input type=\"radio\" name=\"interval\" value={item.interval} className=\"align-middle\" id={`interval-option${index + 1}`} checked={currentInterval === item.interval} onChange={this.inputChange} />\n                <label className=\"align-middle m-0 ml-2\" htmlFor={`interval-option${index + 1}`}>{item.text}</label>\n                <br />\n              </React.Fragment>\n            );\n          })}\n          <button type=\"submit\" className=\"btn btn-outline-primary mt-2\">{gettext('Submit')}</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EmailNotice; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Utils } from './utils/utils';\nimport { gettext, isPro, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle } from './utils/constants';\nimport { dtableWebAPI } from './utils/dtable-web-api';\nimport toaster from './components/toast';\nimport SideNav from './components/user-settings/side-nav';\nimport UserAvatarForm from './components/user-settings/user-avatar-form';\nimport UserBasicInfoForm from './components/user-settings/user-basic-info-form';\nimport WebdavPassword from './components/user-settings/webdav-password';\nimport LanguageSetting from './components/user-settings/language-setting';\nimport ListInAddressBook from './components/user-settings/list-in-address-book';\nimport TwoFactorAuthentication from './components/user-settings/two-factor-auth';\nimport SocialLogin from './components/user-settings/social-login';\nimport DeleteAccount from './components/user-settings/delete-account';\nimport BindPhone from './components/user-settings/bind-phone';\nimport EmailNotice from './components/user-settings/email-notice';\nimport Account from './components/common/account';\nimport Notification from './components/common/notification';\nimport SearchDtable from './pages/dtable/search/search-dtable';\n\nimport './css/toolbar.css';\nimport './css/search.css';\n\nimport './css/user-settings.css';\nimport './css/dtable-search.css';\n\nconst { \n  canUpdatePassword, passwordOperationText, userUnusablePassword,\n  enableAddressBook,\n  enableWebdavSecret,\n  twoFactorAuthEnabled,\n  enableWorkWeixin,\n  enableWeixin,\n  enableDeleteAccount,\n  enableBindPhone\n} = window.app.pageOptions;\n\nclass Settings extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.sideNavItems = [\n      {show: true, href: '#user-basic-info', text: gettext('Profile')},\n      {show: canUpdatePassword, href: '#update-user-passwd', text: gettext('Password')},\n      {show: enableBindPhone, href: '#bind-phone', text: gettext('Bind Phone Number')},\n      {show: enableWebdavSecret, href: '#update-webdav-passwd', text: gettext('WebDav Password')},\n      {show: enableAddressBook, href: '#list-in-address-book', text: gettext('Global Address Book')},\n      {show: true, href: '#lang-setting', text: gettext('Language')},\n      {show: isPro, href: '#email-notice', text: gettext('Email Notification')},\n      {show: twoFactorAuthEnabled, href: '#two-factor-auth', text: gettext('Two-Factor Authentication')},\n      {show: (enableWorkWeixin || enableWeixin), href: '#social-auth', text: gettext('Social Login')},\n      {show: enableDeleteAccount, href: '#del-account', text: gettext('Delete Account')},\n    ];\n\n    this.state = {\n      curItemID: this.sideNavItems[0].href.substr(1),\n      userInfo: null,\n    };\n  }\n\n  componentDidMount() {\n    dtableWebAPI.getUserInfo().then((res) => {\n      this.setState({userInfo: res.data});\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n  \n  updateUserInfo = (data) => {\n    dtableWebAPI.updateUserInfo(data).then((res) => {\n      this.setState({userInfo: res.data});\n      toaster.success(gettext('Success'));\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onSearchedClick = (item) => {\n    let url = siteRoot + 'workspace/' + item.workspace_id + '/dtable/' + item.name + '/';\n    location.href = url;\n  }\n\n  handleContentScroll = (e) => {\n    const scrollTop = e.target.scrollTop;\n    const scrolled = this.sideNavItems.filter((item, index) => {\n      return item.show && document.getElementById(item.href.substr(1)).offsetTop - 45 < scrollTop;\n    });\n    if (scrolled.length) {\n      this.setState({\n        curItemID: scrolled[scrolled.length -1].href.substr(1)\n      });\n    }\n  }\n\n  render() {\n    let searchPlaceholder = gettext('Search bases');\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            <div className=\"common-toolbar\">\n              <SearchDtable placeholder={searchPlaceholder} onSearchedClick={this.onSearchedClick}/>\n              <Notification />\n              <Account />\n            </div>\n          </div>\n          <div className=\"flex-auto d-flex o-hidden\">\n            <div className=\"side-panel o-auto\">\n              <SideNav data={this.sideNavItems} curItemID={this.state.curItemID} />\n            </div>\n            <div className=\"main-panel d-flex flex-column\">\n              <h2 className=\"heading\">{gettext('Settings')}</h2>\n              <div className=\"content position-relative\" onScroll={this.handleContentScroll}>\n                <div id=\"user-basic-info\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Profile Setting')}</h3>\n                  <UserAvatarForm  />\n                  {this.state.userInfo && <UserBasicInfoForm userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                </div>\n                {canUpdatePassword &&\n                <div id=\"update-user-passwd\" className=\"setting-item\">\n                  <h3 className=\"setting-item-heading\">{gettext('Password')}</h3>\n                  {userUnusablePassword &&\n                  <p>{gettext('You have not set a password yet. Setting a password and binding a phone number or an email will enable you to login via phone number or email.')}</p>}\n                  <a href={`${siteRoot}accounts/password/change/`} className=\"btn btn-outline-primary\">{passwordOperationText}</a>\n                </div>\n                }\n                {enableBindPhone && this.state.userInfo && (\n                  <BindPhone oldBindPhone={this.state.userInfo.bind_phone}/>\n                )}\n                {enableWebdavSecret && <WebdavPassword />}\n                {enableAddressBook && this.state.userInfo && \n                <ListInAddressBook userInfo={this.state.userInfo} updateUserInfo={this.updateUserInfo} />}\n                <LanguageSetting />\n                {isPro && <EmailNotice />}\n                {twoFactorAuthEnabled && <TwoFactorAuthentication />}\n                {(enableWorkWeixin || enableWeixin) && <SocialLogin />}\n                {enableDeleteAccount && <DeleteAccount />}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(\n  <Settings />,\n  document.getElementById('wrapper')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { gettext, siteRoot, lang } from '../../utils/constants';\n\nmoment.locale(lang);\n\nconst propTypes = {\n  noticeItem: PropTypes.object.isRequired,\n  onNoticeItemClick: PropTypes.func.isRequired,\n};\n\nconst MSG_TYPE_ADD_USER_TO_GROUP = 'add_user_to_group';\nconst MSG_TYPE_SHARE_DTABLE_TO_USER = 'share_dtable_to_user';\nconst MSG_TYPE_SUBMIT_FORM = 'submit_form';\n\nclass NoticeItem extends React.Component {\n\n  generatorNoticeInfo () {\n    let noticeItem = this.props.noticeItem;\n    let noticeType = noticeItem.type;\n    let detail = noticeItem.detail;\n\n    if (noticeType === MSG_TYPE_SHARE_DTABLE_TO_USER) {\n      let avatar_url = detail.share_from.share_from_user_avatar_url;\n\n      let shareFrom = detail.share_from.share_from_user_name;\n\n      let dtableName = detail.dtable.name;\n      let dtableUrl = siteRoot + 'workspace/' + detail.dtable.workspace_id + '/dtable/' +  dtableName + '/';\n      let dtableLink = '<a href=\"' + dtableUrl + '\" >' + dtableName + '</a>';\n\n      let notice = gettext('{share_from} has shared a table named {dtable_link} to you.');\n\n      notice = notice.replace('{share_from}', shareFrom);\n      notice = notice.replace('{dtable_link}', dtableLink);\n      return {avatar_url, notice};\n    }\n\n    else if (noticeType === MSG_TYPE_SUBMIT_FORM) {\n      const { form, submit_user } = detail;\n      const { form_name } = form;\n      const { submit_user_avatar_url: avatar_url, submit_user_name } = submit_user;\n      let notice;\n      if (!submit_user_name) {\n        notice = gettext('Anonymous user has submmited form {formName}.');\n        notice = notice.replace('{formName}', form_name);\n      } else {\n        notice = gettext('{submitUser} has submmited form {formName}.');\n        notice = notice.replace('{submitUser}', submit_user_name).replace('{formName}', form_name);\n      }\n      return {avatar_url, notice};\n    }\n\n    else if (noticeType === MSG_TYPE_ADD_USER_TO_GROUP) {\n\n      let avatar_url = detail.group_staff_avatar_url;\n\n      let groupStaff = detail.group_staff_name;\n      \n      let userHref = siteRoot + 'profile/' + detail.group_staff_email + '/';\n      let groupName = detail.group_name;\n\n      let notice = gettext('{user_link} has added you to {group}');\n      let userLink = '<a href=' + userHref + '>' + groupStaff + '</a>';\n\n      notice = notice.replace('{user_link}', userLink);\n      notice = notice.replace('{group}', groupName);\n\n      return {avatar_url, notice};\n    }\n    \n    return {avatar_url : null, notice : null};\n  }\n\n  onNoticeItemClick = () => {\n    let item = this.props.noticeItem;\n    if (item.seen === true) {\n      return;\n    }\n    this.props.onNoticeItemClick(item);\n  }\n\n  render() {\n    let noticeItem = this.props.noticeItem;\n    let { avatar_url, notice } = this.generatorNoticeInfo();\n\n    if (!avatar_url && !notice) {\n      return '';\n    }\n\n    return (\n      <li onClick={this.onNoticeItemClick} className={noticeItem.seen ? 'read' : 'unread'}>\n        <div className=\"notice-item\">\n          <div className=\"main-info\">\n            <img src={avatar_url} width=\"32\" height=\"32\" className=\"avatar\" alt=\"\"/>\n            <p className=\"brief\" dangerouslySetInnerHTML={{__html: notice}}></p>\n          </div>\n          <p className=\"time\">{moment(noticeItem.time).fromNow()}</p>\n        </div>\n      </li>\n    );\n  }\n}\n\nNoticeItem.propTypes = propTypes;\n\nexport default NoticeItem;\n","import React from 'react';\nimport { dtableWebAPI } from '../../utils/dtable-web-api';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport NoticeItem from './notice-item';\n\nclass Notification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNotice: false,\n      unseenCount: 0,\n      noticeList: [],\n    };\n  }\n\n  componentDidMount() {\n    dtableWebAPI.getUnseenNotificationCount().then(res => {\n      this.setState({unseenCount: res.data.unseen_count});\n    });\n  }\n\n  onClick = () => {\n    if (this.state.showNotice) {\n      dtableWebAPI.updateNotifications();\n      this.setState({\n        showNotice: false,\n        unseenCount: 0\n      });\n    } else {\n      this.loadNotices();\n      this.setState({showNotice: true});\n    }\n  }\n\n  loadNotices = () => {\n    let page = 1;\n    let perPage = 5;\n    dtableWebAPI.listNotifications(page, perPage).then(res => {\n      let noticeList = res.data.notification_list;\n      this.setState({noticeList: noticeList});\n    });\n  }\n\n  onNoticeItemClick = (noticeItem) => {    \n    let noticeList = this.state.noticeList.map(item => {\n      if (item.id === noticeItem.id) {\n        item.seen = true;\n      }\n      return item;\n    });\n    dtableWebAPI.markNoticeAsRead(noticeItem.id);\n    let unseenCount = this.state.unseenCount === 0 ? 0 : this.state.unseenCount - 1;\n    this.setState({\n      noticeList: noticeList,\n      unseenCount: unseenCount, \n    });\n    \n  }\n\n  render() {\n\n    return (\n      <div id=\"notifications\">\n        <span onClick={this.onClick} className=\"no-deco a-simulate\" id=\"notice-icon\" title=\"Notifications\" aria-label=\"Notifications\">\n          <span className=\"dtable-font dtable-icon-bell\"></span>\n          <span className={`num ${this.state.unseenCount ? '' : 'hide'}`}>{this.state.unseenCount}</span>\n        </span>\n        <div id=\"notice-popover\" className={`sf-popover ${this.state.showNotice ? '': 'hide'}`}>\n          <div className=\"outer-caret up-outer-caret\"><div className=\"inner-caret\"></div></div>\n          <div className=\"sf-popover-hd ovhd\">\n            <h3 className=\"sf-popover-title title\">{gettext('Notifications')}</h3>\n            <span onClick={this.onClick} title={gettext('Close')} aria-label={gettext('Close')} className=\"a-simulate sf-popover-close js-close dtable-font dtable-icon-x- action-icon float-right\"></span>\n          </div>\n          <div className=\"sf-popover-con\">\n            <ul className=\"notice-list\">\n              {this.state.noticeList.map(item => {\n                return (<NoticeItem key={item.id} noticeItem={item} onNoticeItemClick={this.onNoticeItemClick}/>);\n              })}\n            </ul>\n            <a href={siteRoot + 'notification/list/'} className=\"view-all\">{gettext('See All Notifications')}</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  item: PropTypes.object.isRequired,\n  onItemClickHandler: PropTypes.func.isRequired,\n};\n\nclass SearchResultItem extends React.Component {\n\n  onClickHandler = () => {\n    var item = this.props.item;\n    this.props.onItemClickHandler(item);\n  }\n\n  render() {\n    let item = this.props.item;\n    return (\n      <li className=\"dtable-search-result-item\" onClick={this.onClickHandler}>\n        <span className=\"dtable-font dtable-icon-table\"></span>\n        <div className=\"item-content\">\n          <div className=\"item-name ellipsis\">{item.name}</div>\n        </div>\n      </li>\n    );\n  }\n}\n\nSearchResultItem.propTypes = propTypes;\n\nexport default SearchResultItem;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MediaQuery from 'react-responsive';\nimport { dtableWebAPI } from '../../../utils/dtable-web-api';\nimport { gettext } from '../../../utils/constants';\nimport SearchResultItem from './search-result-item';\nimport Workspace from '../model/workspace';\n\nconst propTypes = {\n  isPublic: PropTypes.bool,\n  repoID: PropTypes.string,\n  placeholder: PropTypes.string,\n  onSearchedClick: PropTypes.func.isRequired,\n};\n\nclass SearchDtable extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 'default',\n      value: '',\n      resultItems: [],\n      isMaskShow: false,\n      isResultShow: false,\n      isResultGetted: false,\n      isCloseShow: false,\n      isSearchInputShow: false, // for mobile\n    };\n    this.inputValue = '';\n  }\n\n  onFocusHandler = () => {\n    this.setState({\n      width: '30rem',\n      isMaskShow: true,\n      isCloseShow: true\n    });\n  }\n\n  onCloseHandler = () => {\n    this.resetToDefault();\n  }\n\n  onItemClickHandler = (item) => {\n    this.resetToDefault();\n    this.props.onSearchedClick(item);\n  }\n\n  onChangeHandler = (event) => {\n    let _this = this;\n    this.setState({value: event.target.value});\n    let newValue = event.target.value;\n    if (this.inputValue === newValue.trim()) {\n      return false;\n    }\n    this.inputValue = newValue.trim();\n\n    if (this.inputValue === '' || _this.getValueLength(this.inputValue) < 3) {\n      this.setState({\n        isResultShow: false,\n        isResultGetted: false\n      });\n      return false;\n    }\n    let queryData = {\n      q: newValue,\n    };\n\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    this.timer = setTimeout(_this.getSearchResult(queryData), 500);\n  }\n\n  getSearchResult(queryData) {\n    \n    this.setState({\n      isResultShow: true,\n      isResultGetted: false\n    });\n\n    this.sendRequest(queryData);\n  }\n\n  sendRequest(queryData) { //search dtable\n    dtableWebAPI.listWorkspaces().then((res) => {\n      let workspaceList = res.data.workspace_list.filter(item => {\n        return new Workspace(item);\n      });\n      let dtableNameList = [];\n      workspaceList.forEach(dtable => {\n        let resultData = dtable.table_list.filter(item => {\n          return item.name.indexOf(queryData.q) > -1;\n        });\n        if (resultData.length > 0) {\n          dtableNameList.push(...resultData);\n        }\n      });\n      this.setState({\n        resultItems: dtableNameList,\n        isResultGetted: true,\n      });\n    });\n  }\n\n  getValueLength(str) {\n    var i = 0, code, len = 0;\n    for (; i < str.length; i++) {\n      code = str.charCodeAt(i);\n      if (code === 10) { //solve enter problem\n        len += 2;\n      } else if (code < 0x007f) {\n        len += 1;\n      } else if (code >= 0x0080 && code <= 0x07ff) {\n        len += 2;\n      } else if (code >= 0x0800 && code <= 0xffff) {\n        len += 3;\n      }\n    }\n    return len;\n  }\n\n  resetToDefault() {\n    this.inputValue = null;\n    this.setState({\n      width: '',\n      value: '',\n      isMaskShow: false,\n      isCloseShow: false,\n      isResultShow: false,\n      isResultGetted: false,\n      resultItems: [],\n      isSearchInputShow: false,\n    });\n  }\n\n  renderSearchResult() {\n    if (!this.state.isResultShow) {\n      return;\n    }\n    if (!this.state.isResultGetted || this.getValueLength(this.inputValue) < 3) {\n      return (\n        <span className=\"loading-icon loading-tip\"></span>\n      );\n    }\n    if (!this.state.resultItems.length) {\n      return (\n        <div className=\"search-result-none\">{gettext('No results matching.')}</div>\n      );\n    }\n    return (\n      <ul className=\"search-result-list\">\n        {this.state.resultItems.map(item => {\n          return (\n            <SearchResultItem\n              key={item.id}\n              item={item}\n              onItemClickHandler={this.onItemClickHandler}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n\n  onSearchToggle = () => {\n    this.setState({\n      isSearchInputShow: !this.state.isSearchInputShow,\n      isMaskShow: !this.state.isMaskShow,\n    });\n  }\n\n  render() {\n    let width = this.state.width !== 'default' ? this.state.width : '';\n    let style = {'width': width};\n\n    return (\n      <Fragment>\n        <MediaQuery query=\"(min-width: 768px)\">\n          <div className=\"search\">\n            <div className={`search-mask ${this.state.isMaskShow ? '' : 'hide'}`} onClick={this.onCloseHandler}></div>\n            <div className=\"search-container\">\n              <div className=\"input-icon\">\n                <i className=\"search-icon-left input-icon-addon dtable-font dtable-icon-search\"></i>\n                <input \n                  type=\"text\" \n                  className=\"form-control search-input\" \n                  name=\"query\"\n                  placeholder={this.props.placeholder}\n                  style={style}\n                  value={this.state.value}\n                  onFocus={this.onFocusHandler}\n                  onChange={this.onChangeHandler}\n                  autoComplete=\"off\"\n                />\n                {this.state.isCloseShow && <i className='search-icon-right input-icon-addon dtable-font dtable-icon-cancel' onClick={this.onCloseHandler}></i>}\n              </div>\n              <div className=\"search-result-container\">\n                {this.renderSearchResult()}\n              </div>\n            </div>\n          </div>\n        </MediaQuery>\n        <MediaQuery query=\"(max-width: 767.8px)\">\n          <div className=\"search-icon-container\">\n            <i className=\"search-icon dtable-font dtable-icon-search\" onClick={this.onSearchToggle}></i>\n          </div>\n          {this.state.isSearchInputShow && \n            <div className=\"search\">\n              <div className={`search-mask ${this.state.isMaskShow ? '' : 'hide'}`} onClick={this.onCloseHandler}></div>\n              <div className=\"search-container\">\n                <div className=\"input-icon\">\n                  <input \n                    type=\"text\" \n                    className=\"form-control search-input\" \n                    name=\"query\"\n                    placeholder={this.props.placeholder}\n                    style={style}\n                    value={this.state.value}\n                    onFocus={this.onFocusHandler}\n                    onChange={this.onChangeHandler}\n                    autoComplete=\"off\"\n                  />\n                  <i className=\"search-icon-left input-icon-addon dtable-font dtable-icon-search\" style={{right: 0}}></i>\n                </div>\n                <div className=\"search-result-container\">\n                  {this.renderSearchResult()}\n                </div>\n              </div>\n            </div>\n          }\n        </MediaQuery>\n      </Fragment>\n    );\n  }\n}\n\nSearchDtable.propTypes = propTypes;\n\nexport default SearchDtable;\n"],"sourceRoot":""}